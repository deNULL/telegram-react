{"version":3,"sources":["Stores/FileStore.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Supergroup.js","Utils/File.js","Stores/MessageStore.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Location.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Message/Media/Poll.js","Actions/Poll.js","Components/Message/Media/Venue.js","Components/Message/Media/Call.js","Utils/Message.js","Stores/PlayerStore.js","Actions/Client.js","Utils/User.js","Stores/SupergroupStore.js","Utils/Media.js","Components/Viewer/FileProgress.js","Components/Message/Media/Sticker.js","Stores/BasicGroupStore.js","Components/Tile/UserTileControl.js","Stores/StickerStore.js","Components/Message/Media/Photo.js","Components/Message/MessageAuthor.js","Utils/Currency.js","Utils/ServiceMessage.js","Components/Tile/DocumentTile.js","Components/Message/Media/Animation.js","Components/ColumnMiddle/StickerPreview.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/Audio.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Video.js","Components/Message/Media/VideoNote.js","Components/Message/Media/MediaStatus.js","Components/Message/Reply.js","Components/Tile/ReplyTile.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Dialog/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Dialog/CreatePollDialog.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Notifications.js","Components/Tile/ChatStatus.js","Components/Tile/ChatTileControl.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Dialog/ForwardDialog.js","Components/Additional/NotificationTimer.js","Components/Tile/DialogTitleControl.js","Components/Dialog/LeaveChatDialog.js","Components/Dialog/ClearHistoryDialog.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatusControl.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/Tile/DialogContentControl.js","Components/Tile/DialogBadgeControl.js","Components/Tile/DialogMetaControl.js","Components/Tile/DialogControl.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Dialog/ChatInfoDialog.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/MessageStatus.js","Components/Message/InlineKeyboard.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/MessagesList.js","Components/Dialog/ShareStickerSetButton.js","Components/Dialog/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","FileStore","_this","Object","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onUpdate","_ref","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","update","wrap","_context","prev","next","t0","set","file","onUpdateFile","emit","abrupt","onUpdateAuthorizationState","stop","_x","apply","arguments","onClientUpdate","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","_ref2","_callee2","_context2","authorization_state","initDB","_x2","handleDownloads","handleUploads","arr","id","idb_key","local","downloads","has","is_downloading_completed","items","get","delete","getStore","forEach","item","handleChat","handleMessage","handleSticker","handleUser","console","error","remote","uploads","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","handleAnimation","audio","handleAudio","photo","handlePhoto","document","handleDocument","game","handleGame","location","handleLocation","sticker","web_page","video","video_note","voice_note","handleVideo","handleVoiceNote","handleVideoNote","venue","obj","i","sizes","length","photoSize","source","updatePhotoBlob","chat_id","album_cover_thumbnail","updateAudioThumbnailBlob","THUMBNAIL_PRIORITY","updateAudioBlob","thumbnail","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","chatId","messageId","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","updateAnimationThumbnailBlob","updateAnimationBlob","deleteLocalFile","fileId","getBlob","blobItems","setBlob","blob","deleteBlob","locationItems","setLocationFile","getBlobUrl","urls","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","@type","isWebpSupported","decodeWebpBlobToPngUrl","then","callbacks","db","WeakMap","Map","setMaxListeners","Infinity","callback","log","initiatingDB","push","openDB","catch","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","_this2","_ref3","_callee4","response","_context4","send","file_id","sent","concat","data","_x4","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getChatTypingString","ChatStore","type","typingManager","getTypingManager","typingString","inputTypingManager","actions","size","values","value","action","t","getPrivateChatTypingString","firstUser","secondUser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","keys","Symbol","iterator","done","UserStore","err","return","first_name","second_name","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getGroupChatTypingString","getMessageSenderFullName","isServiceMessage","sender_user_id","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","key","getContent","getChatUnreadMessageIcon","is_outgoing","last_read_outbox_message_id","getChatUnreadCount","unread_count","getChatUnreadMentionCount","unread_mention_count","isChatMuted","use_default_mute_for","notification_settings","mute_for","notificationSettings","ApplicationStore","getNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","onlineCount","getOnlineMemberCount","getBasicGroupStatus","user_id","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getSupergroupStatus","getChatSubtitle","showSavedMessages","isMeChat","chatTypingString","getChatLetters","title","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","phone_number","getChatBio","bio","description","isPrivateChat","isGroupChat","isChannelChat","isChatMember","is_member","getChatTitle","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getChatUserId","getPhotoFromChat","profile_photo","canSendFiles","can_send_media_messages","getChatShortTitle","getGroupChatMembersCount","canClearHistory","Boolean","canDeleteChat","canSendPhotos","canSendDocuments","canSendPolls","canSendMessages","can_send_messages","canPinMessages","can_pin_messages","getChatDraft","draft_message","input_message_text","text","getChatDraftReplyToMessageId","replyToMessageId","reply_to_message_id","__webpack_require__","d","__webpack_exports__","webpMachine","WebpMachine","webpDecodeQueue","getSizeString","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","_file","PRELOAD_AUDIO_SIZE","loadAnimationContent","_file3","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","loadUserContent","loadDocumentContent","_file5","PRELOAD_DOCUMENT_SIZE","loadGameContent","loadLocationContent","zoom","LOCATION_ZOOM","width","LOCATION_WIDTH","height","LOCATION_HEIGHT","scale","LOCATION_SCALE","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","getPhotoSize","_file8","can_be_downloaded","loadPhotoThumbnailContent","getPhotoThumbnailSize","_file9","loadStickerContent","_file10","PRELOAD_STICKER_SIZE","loadVideoContent","_file12","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","_file14","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","_file16","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","loadPhoto","loadUsersContent","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","saveOrDownload","fileName","mime","saveData","getMediaPreviewFile","getMediaFile","PHOTO_SIZE","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","loadProfileMediaViewerContent","photos","_photo9","small","big","_photo10","getProfilePhoto","_photo11","preloadProfileMediaViewerContent","ids","loadChatContent","loadChatsContent","loadDraftContent","loadStickerSetContent","stickerSet","loadStickersContent","stickers","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","includes","getBrowser","fileReader","FileReader","onload","ab","Uint8Array","decodeNext","_webpDecodeQueue$","decode","shift","readAsArrayBuffer","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","message_id","reply_markup","edit_date","views","old_content","new_content","is_listened","is_viewed","old_message_id","sending_state","error_code","error_message","selected","selectedItems","clear","deletedMessage","Contact","_this$props","props","openMedia","last_name","fullName","number","formatPhoneNumber","react_default","className","UserTileControl","onClick","React","Component","Game","displaySize","Animation","fitPhotoSize","getFitSize","Photo","_this$props2","classes","formattedText","getFormattedText","classNames","accentBackgroundLight","accentColorMain","defaultProps","PHOTO_DISPLAY_SIZE","withStyles","theme","objectSpread","accentStyles","Location","onClientUpdateLocationBlob","forceUpdate","on","src","longitude","latitude","rel","draggable","alt","Room_default","fontSize","color","PollRadio","chosen","beingChosen","hidden","onChange","poll-radio-hidden","Radio_default","root","radioRoot","checked","checkedIcon","RadioButtonChecked_default","icon","CircularProgress_default","thickness","progressRoot","position","top","left","pointerEvents","padding","PollPercentage","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateAnimation","stopAnimation","handle","requestAnimationFrame","onAnimationFrame","cancelAnimationFrame","_this$state","state","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","setState","animated","Math","floor","prevPropsValue","nextProps","nextState","nextContext","closed","prevProps","prevState","snapshot","poll-percentage-subtitle","Fragment","PollOption","getTitleString","canBeSelected","handleClick","onVote","stopPropagation","handleCancel","onUnvote","option","maxVoterCount","voter_count","vote_percentage","is_chosen","is_being_chosen","Message_Media_PollPercentage","Message_Media_PollRadio","defineProperty","borderColor","LinearProgress_default","bar","progressBar","variant","max","enhance","compose","backgroundColor","margin","right","bottom","transition","borderStyle","withTheme","withTranslation","Poll","dialog","contextMenu","getTotalVoterCountString","handleVote","optionIds","option_ids","setPollAnswer","handleUnvote","poll","handleCloseContextMenu","is_closed","cancelPollAnswer","handleStopPoll","_this$props3","stopPoll","handleDialog","handleCloseDialog","handleContextMenu","preventDefault","clientX","clientY","_this$props4","question","options","total_voter_count","canUnvote","canStopPoll","can_be_edited","every","toConsumableArray","onContextMenu","Message_Media_PollOption","Popover_default","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","MenuList_default","e","MenuItem_default","Dialog_default","transitionDuration","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","Venue","address","Message_Media_Location","Call","callType","getMessageCallType","duration","getDurationApproximateString","callIcon","Call_default","palette","primary","main","getTitle","substring","start","end","onLinkClick","entities","beforeEntityText","offset","entityText","startsWith","decodedUrl","decodeURI","hashtag","command","afterEntityText","getText","caption","getWebPage","getDateHint","getMedia","Audio","Message_Media_Contact","Document","Message_Media_Game","Message_Media_Poll","Sticker","Message_Media_Venue","Video","VideoNote","VoiceNote","Message_Media_Call","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getUnread","getSenderUserId","filterMessages","reduce","accumulator","current","isMessageCallCancelled","discard_reason","ttl","getServiceMessageContent","emoji","isMediaContent","isVideoMessage","isLottieMessage","file_name","endsWith","isAnimationMessage","isContentOpened","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","regenerator_default","openVideo","openVideoNote","openVoiceNote","openChatPhoto","openUser","openContact","openGame","isDeletedMessage","getReplyPhotoSize","parseHtmlAttrs","attrs","match","attrRegex","RegExp","exec","pv","trim","cleanupHtml","html","cleanHtml","replace","_arr","_i","tag","outer","inner","_parseHtmlAttrs","isBlock","bullet","indexOf","htmlToFormattedText","entitiesMap","b","strong","em","code","pre","ta","tagRegex","depth","innerHTML","lastIndex","getEmojiCount","RepeatEnum","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","close","playlist","time","videoStream","getPlaylist","volume","Cookies","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","currentTime","timestamp","stream","_this$message","findIndex","useRepeatShuffle","_this$message2","nextIndex","getRandomInt","_assertThisInitialize","currentPlaylist","_messages","total_count","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","totalCount","query","from_message_id","limit","_x3","cookies","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","player","openChat","highlightMessage","selectMessage","_Controllers_TdLibController__WEBPACK_IMPORTED_MODULE_0__","popup","isUserBlocked","getUserLetters","getUserStatusOrder","getProfilePhotoDateHint","dateformat__WEBPACK_IMPORTED_MODULE_0__","dateformat__WEBPACK_IMPORTED_MODULE_0___default","n","_Common__WEBPACK_IMPORTED_MODULE_1__","_Constants__WEBPACK_IMPORTED_MODULE_2__","_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__","i18next__WEBPACK_IMPORTED_MODULE_4__","SERVICE_NOTIFICATIONS_USER_ID","toLocaleLowerCase","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","is_blocked","expires","userProfilePhoto","smallPhotoSize","PROFILE_PHOTO_SMALL_SIZE","bigPhotoSize","PROFILE_PHOTO_BIG_SIZE","added_date","setFullInfo","supergroup_full_info","fullInfoItems","isBlurredThumbnail","THUMBNAIL_BLURRED_SIZE","performer","trimmedTitle","trimmedPerformer","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","_toRowColumn","setIndex","stickerIndex","prevRows","ceil","toRowColumn","_toRowColumn2","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","row","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","circleStyle","circle","FileProgress","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","currentFile","nextFile","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","onCancel","completeAnimation","prevPropsFile","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","cancelButton","zIndex","completeIcon","_this$getProgressPara","_this$getProgressPara2","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","background","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_8___default","onClientUpdateStickerBlob","onClientUpdateStickerThumbnailBlob","blur","preview","isBlurred","fitSize","stickerStyle","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","media-blurred","STICKER_DISPLAY_SIZE","basic_group","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","tileColor","abs","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","pointer","StickerStore","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","sticker_set_ids","_this$stickerSet","is_installed","assign","hint","foundStickers","onClientUpdatePhotoBlob","thumbnailSize","showProgress","photoStyle","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","PHOTO_THUMBNAIL_SIZE","MessageAuthor","openUserCommand","openChatCommand","react__WEBPACK_IMPORTED_MODULE_5___default","currency","Currency","list","symbol","totalAmount","amount","pow","getPow","serviceMap","tFormatted","str","regexp","last","parseInt","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","days","weeks","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","getString","total_amount","pinnedContent","author","getMessageAuthor","pinnedMessage","domain_name","DocumentTile","onClientUpdateDocumentThumbnailBlob","document-tile-background","_Components_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","borderRadius","startStopPlayer","videoRef","inView","focused","openMediaViewer","openProfileMediaViewer","play","pause","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateFocusWindow","onClientUpdateMessagesInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","createRef","hasFocus","_this$props$animation","mime_type","isGif","ref","poster","muted","autoPlay","loop","playsInline","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","join","inContainer","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","STICKER_PREVIEW_DISPLAY_SIZE","DocumentAction","isDownloadingActive","isUploadingActive","sizeString","ArrowDownward_default","InsertDriveFile_default","data-name","data-ext","Message_Media_DocumentAction","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","_this$props5","_Tile_DocumentTile__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Pause__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_PlayArrow__WEBPACK_IMPORTED_MODULE_7___default","_AudioAction__WEBPACK_IMPORTED_MODULE_10__","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","_this$state2","_this$state3","durationString","getDurationString","currentTimeString","audioDuration","_this$state4","_this$state5","onClientUpdateVideoThumbnailBlob","_this$props$video","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","children","_this$props6","_this$props$videoNote","video-note-playing","onCanPlay","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_9___default","_MediaStatus__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_VolumeOff__WEBPACK_IMPORTED_MODULE_7___default","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_8___default","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","Reply","onGetMessageResult","handleOpen","onMouseDown","_Tile_ReplyTile__WEBPACK_IMPORTED_MODULE_11__","_Users_denull_dev_js_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","ReplyTile","isVideoNote","reply-tile-photo-round","reply-tile-photo-loading","NotificationsControl","onUpdateChatNotificationSettings","isMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","prevChatId","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","AttachButton","anchorEl","handleMenuClick","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","IconButton_default","iconButton","aria-label","AttachFile_default","Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","disabled","ListItemIcon_default","Photo_default","ListItemText_default","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollTop","scrollHeight","focus","utils","special","navigational","isSpecial","keyCode","isNavigational","CreatePollOption","optionTextRef","innerText","handleDelete","onDelete","handleInput","dataset","maxLength","remainLength","handleKeyDown","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","handlePaste","selectionString","pasteText","clipboardData","getData","substr","execCommand","POLL_OPTION_MAX_LENGTH","contentEditable","suppressContentEditableWarning","placeholder","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","onKeyDown","onPaste","Close_default","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","withSaveRef","minWidth","userSelect","withRestoreRef","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","PollStore","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleClose","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","_this3","Components_Dialog_CreatePollOption","el","canAddOption","dialogRoot","contentRoot","Typography_default","flexGrow","POLL_QUESTION_HINT_LENGTH","Divider_default","dividerRoot","List_default","listRoot","ListItem_default","listItem","button","disableTypography","typographyRoot","InputBoxHeader","Reply_default","replyIcon","Message_Reply","closeIconButton","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","all","bind","InputBoxControl","onClientUpdateStickerSend","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","currentChatId","setInputFocus","onClientUpdateChatId","nextChatId","openPasteDialog","setDraft","element","draft","setChatDraftMessage","chatDraftMessage","draftMessage","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","disable_web_page_preview","clear_draft","handleSubmit","attachPhotoRef","handleAttachPhotoComplete","files","Array","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","handleKeyUp","setTyping","name","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","plainText","handlePasteContinue","handleClosePaste","asyncToGenerator","clearDraft","invokeScheduledAction","input_message_content","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","regex","t1","performance","emojiRegex","getChatId","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","onKeyUp","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Dialog_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","onUpdateBasicGroup","onUpdateSupergroup","handleJoin","handleDeleteAndExit","remove_from_chat_list","Components_ColumnMiddle_InputBoxControl","ColumnMiddle_NotificationsCommandControl","VoiceNoteSlider","reset","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider_default","slider","thumbWrapper","thumb","min","maxWidth","Pause_default","PlayArrow_default","Message_Media_VoiceNoteSlider","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","inherits","createClass","build","maxSnack","MAX_SNACK","displayName","getDisplayName","ChatStatus","onUpdateUserStatus","online","borderSize","iconIndicator","default","overflow","boxSizing","ChatTileControl","onFastUpdatingComplete","showOnline","BookmarkBorder_default","Components_Tile_ChatStatus","statusRoot","statusIcon","ForwardTargetChat","shortTitle","forward-target-chat-selected","Components_Tile_ChatTileControl","border","markSelected","markUnselected","boxShadow","paper","cyrillicInput","getCyrillicInput","input","output","latinInput","getLatinInput","ForwardDialog","loadContent","promises","getChatsPromise","savedMessagesPromise","chats","savedMessages","getPublicMessageLink","offset_order","offset_chat_id","force","slicedToArray","chatIds","chat_ids","for_album","publicMessageLink","info","handleCopyLink","link","copy","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","can_be_forwarded","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","div","handleSearchKeyDown","handleSearchKeyUp","searchRef","latinText","cyrillicText","searchResults","hasSearchText","searchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","setSearchFocus","Components_Tile_ForwardTargetChat","foundChats","aria-describedby","searchList","autoFocus","spacing","unit","dialogContent","withSnackbar","NotificationTimer","handleTimer","seconds","expire","timeout","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","DialogTitleControl","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","menuAnchorOrigin","menuTransformOrigin","MainMenuButton","handleButtonClick","handleChatInfo","openChatDetails","handleMute","mute","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","finish","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","deleteChat","leaveChatTitle","chatMuted","aria-owns","aria-haspopup","menuIconButton","MoreVert_default","Dialog_LeaveChatDialog","Dialog_ClearHistoryDialog","UserStatusControl","isAccent","prevUserId","userStatusSubtitle","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","Components_Tile_UserStatusControl","DialogStatusControl","updateSubtitle","find","subtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","Components_Tile_DialogTitleControl","Components_Tile_DialogStatusControl","ChatDetailsHeader","backButton","leftIconButton","ArrowBack_default","rightIconButton","NotificationsListItem","Notifications_default","NotificationsActive_default","noWrap","ListItemSecondaryAction_default","Switch_default","MoreListItem","handleMoreClick","openMore","handleSendMessage","setChatId","handleBlock","isGroup","isBlocked","isMember","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","unmountOnExit","component","disablePadding","inset","ChatDetails","handleSelectChat","loadMembers","getGroupsInCommon","loadChatContents","getMembers","hasGroupsInCommon","handleUsernameHint","telegramUrlOption","OptionStore","usernameLink","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","handleSelectUser","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","getContentHeight","clientHeight","offsetHeight","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","isMe","member","sort","y","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","ErrorOutline_default","whiteSpace","wordWrap","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","nested","alignItems","GroupsInCommonHeader","backIconButton","GroupsInCommon","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","ChatInfo","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","PureComponent","userStatusRoot","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","subscribersString","listItemSelected","foundPublicChatSubtitle","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderName","senderFullName","tile","accentBackground","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","j","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","globalPromises","globalPromise","globalLatinPromise","globalResults","global","splice","recentlyFound","USERNAME_LENGTH_MIN","offset_date","offset_message_id","topPromise","recentlyFoundPromise","_ref4","category","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","loading","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","RadioGroup_default","FormControlLabel_default","control","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","authorizationState","handleMenuOpen","isAuthorizationReady","handleLogOut","onLogOut","handleCheckUpdates","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","icons_Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","onClientUpdateSearchHashtag","handleDone","logOut","handleSearch","onSearch","openSearch","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icons_Search_default","openIcon","DialogContentControl","onClientUpdateClearHistory","contentControl","DialogBadgeControl","unreadMessageIcon","unreadCount","unreadMentionCount","showUnreadCount","showDraftChat","dialogBadge","dialogBadgeMuted","is_pinned","DialogMetaControl","onClientUpdateLanguageChange","DialogControl","isSelected","dialogActive","Components_Tile_DialogMetaControl","Components_Tile_DialogContentControl","Components_Tile_DialogBadgeControl","cursor","& $statusRoot","&:hover","& $statusIcon","DialogsList","onClientUpdateLeaveChat","hiddenChats","loadFirstSlice","onLoadNext","onUpdateConnectionState","newConnectionState","connectionState","skippedUpdates","onUpdateChatOrder","reorderChats","newChatIds","minChatOrder","offsetOrder","offsetChatId","_args2","CHAT_SLICE_LIMIT","finally","replaceChats","appendChats","getConnectionState","orderedChatIds","isDifferentOrder","dialogs","Components_Tile_DialogControl","oldChatIds","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","onSelectChat","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","Components_ColumnLeft_DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","modal","HeaderCommand","canBeDeletedForAllUsers","can_be_deleted_for_all_users","openDeleteDialog","handleDeleteContinue","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","handlePin","_MessageStore$selecte2","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","canBePinned","buttonLeft","buttonRight","Checkbox_default","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateUserChatAction","handleSearchChat","searchChat","localize","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","showProgressAnimation","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","slice","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","paused","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHint","showDate","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","MessageStatus","handleUpdateMessageSend","handleUpdateChatReadOutbox","sendingState","unread","payload","newMessageId","stateClassName","InlineKeyboard","onClientUpdateMessageEdited","cell","markup","rows","unreadSeparator","WebPage","displaySmallSize","site_name","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","handleSelection","mouseDown","handleDateClick","_this$props7","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","_this$props9","_this$props10","_this$props11","_this$props12","handleLinkClick","_this$props13","invite_link","handleBotClick","_this$props14","via_bot_user_id","_this$props15","_this$props17","showUnreadSeparator","_this$props18","onReplyClick","webPage","media","senderUserId","emojiClass","emojiCount","bot","messageClassName","message-selected","messageSelected","messageHighlighted","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","class","Components_Message_Forward","Message_Media_WebPage","Components_Message_InlineKeyboard","messageAuthorColor","@keyframes highlighted","PinnedMessage","onUpdateChatPinnedMessage","pinned_message_id","chatPhotoStyle","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollDownButton","badge","KeyboardArrowDown_default","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onChangeDocumentVisibility","isDocumentVisible","pendingViewMessages","viewMessages","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","scrollBehavior","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","replaceMessage","handleSendSucceeded","onUpdateNewMessage","completed","insertAfter","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","_message$props","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","insertBefore","basicGroupChat","upgraded_from_basic_group_id","scrollDownVisible","suppressHandleScroll","suppressHandleScrollOnSelectChat","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","handleScrollDown","replyChain","scrollToStart","_callee5","_context5","handleListDragEnter","handleReplyClick","prevMessageId","separatorMessageId","throttle","addVisibilityHandler","removeVisibilityHandler","previousChat","last_read_inbox_message_id","MAX_VALUE","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","Components_Message_ServiceMessage","Components_Message_Message","showTitle","messages-list-selection-active","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","dialogTitleRoot","disablePointerEvents","Dialog_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_Dialog_StickerSetDialog","Components_Dialog_ChatInfoDialog","MediaViewerControl","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","getAnimationData","parse","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","thumbnailBlob","isVideo","isAnimation","isLottie","videoWidth","videoHeight","onVolumeChange","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","delegateYield","saveAnimation","saveDocument","saveVideo","savePhoto","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","prevPhoto","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","currentIndex","getReadWriteStore","prevFileId","currentFileId","inHistory","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","handleGlobalKeydown","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Dialog_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.4a69df5a.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport { getLocationId } from '../Utils/Message';\nimport { isWebpSupported, decodeWebpBlobToPngUrl } from '../Utils/File';\nimport { FILE_PRIORITY, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n        if (!update.authorization_state) return;\n\n        if (update.authorization_state['@type'] === 'authorizationStateWaitTdlibParameters') {\n            await this.initDB();\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(obj.chat_id, obj.id, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (useReadFile) {\n            (async file => {\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n                console.log(`readFile file_id=${file.id} result`, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        if (!isWebpSupported()) {\n            const blob = this.getBlob(fileId);\n            decodeWebpBlobToPngUrl(blob).then(url => {\n                this.urls.set(blob, url);\n                this.emit('clientUpdateStickerThumbnailBlob', {\n                    chatId: chatId,\n                    messageId: messageId,\n                    fileId: fileId\n                });\n            });\n            return;\n        }\n\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        if (!isWebpSupported()) {\n            const blob = this.getBlob(fileId);\n            decodeWebpBlobToPngUrl(blob).then(url => {\n                this.urls.set(blob, url);\n                this.emit('clientUpdateStickerBlob', {\n                    chatId: chatId,\n                    messageId: messageId,\n                    fileId: fileId\n                });\n            });\n            return;\n        }\n\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport { t } from 'i18next';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport UserStore from '../Stores/UserStore';\nimport ChatStore from '../Stores/ChatStore';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport InputBoxControl from '../Components/ColumnMiddle/Footer';\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return t('AreTypingGroup', t('PeopleNum', size));\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return t('AreTypingGroup', t('PeopleNum', size));\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return t('AreTypingGroup', t('PeopleNum', size));\n        }\n\n        return t('AreTypingGroup', t('PersonAndPerson', firstUser, secondUser));\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return t('IsTypingGroup', t('PeopleNum', 1));\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return t('IsTypingGroup', t('PeopleNum', 1));\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return t('IsRecordingRound', firstUser);\n                case 'chatActionRecordingVideoNote':\n                    return t('IsRecordingRound', firstUser);\n                case 'chatActionRecordingVoiceNote':\n                    return t('IsRecordingAudio', firstUser);\n                case 'chatActionStartPlayingGame':\n                    return t('IsSendingGame', firstUser);\n                case 'chatActionUploadingDocument':\n                    return t('IsSendingFile', firstUser);\n                case 'chatActionUploadingPhoto':\n                    return t('IsSendingPhoto', firstUser);\n                case 'chatActionUploadingVideo':\n                    return t('IsSendingVideo', firstUser);\n                case 'chatActionUploadingVideoNote':\n                    return t('IsSendingVideo', firstUser);\n                case 'chatActionUploadingVoiceNote':\n                    return t('IsSendingAudio', firstUser);\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return t('IsTypingGroup', firstUser);\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return t('RecordingRound');\n            case 'chatActionRecordingVideoNote':\n                return t('RecordingRound');\n            case 'chatActionRecordingVoiceNote':\n                return t('RecordingAudio');\n            case 'chatActionStartPlayingGame':\n                return t('SendingGame');\n            case 'chatActionUploadingDocument':\n                return t('SendingFile');\n            case 'chatActionUploadingPhoto':\n                return t('SendingPhoto');\n            case 'chatActionUploadingVideo':\n                return t('SendingVideo');\n            case 'chatActionUploadingVideoNote':\n                return t('SendingVideo');\n            case 'chatActionUploadingVoiceNote':\n                return t('SendingAudio');\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return t('Typing');\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    const user = UserStore.get(message.sender_user_id);\n    if (!user) return null;\n\n    return getUserFullName(user);\n}\n\nfunction getMessageSenderName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id);\n}\n\nfunction getLastMessageSenderName(chat) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction getChatUnreadMessageIcon(chat) {\n    if (!chat) return false;\n    if (!chat.last_message) return false;\n\n    return chat.last_message.is_outgoing && chat.last_message.id > chat.last_read_outbox_message_id;\n}\n\nfunction getChatUnreadCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_count) return null;\n\n    return chat.unread_count;\n}\n\nfunction getChatUnreadMentionCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_mention_count) return null;\n\n    return chat.unread_mention_count;\n}\n\nfunction isChatMuted(chat) {\n    return getChatMuteFor(chat) > 0;\n}\n\nfunction getChatMuteFor(chat) {\n    if (!chat) return 0;\n\n    if (chat.use_default_mute_for) {\n        switch (chat.type) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopePrivateChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopeGroupChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n        }\n    } else {\n        if (!chat.notification_settings) return 0;\n\n        return chat.notification_settings.mute_for;\n    }\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat) {\n    if (!chat) return null;\n\n    let title = chat.title || 'Deleted account';\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.phone_number;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n    if (!chat.type) return;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeSecret': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: chat.type.basic_group_id\n            });\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: chat.type.supergroup_id\n            });\n            break;\n        }\n    }\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendFiles(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return 'Saved Messages';\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPhotos(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendDocuments(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendPolls(chatId) {\n    return true;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        if (basicGroup.status.can_pin_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return false;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return false;\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return false;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        if (supergroup.status.can_pin_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return false;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return false;\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    console.log('getChatDraft', replyToMessageId);\n    return replyToMessageId;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    getChatUnreadMessageIcon,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatMember,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canSendFiles,\n    canSendMessages,\n    canPinMessages,\n    canSendPhotos,\n    canSendDocuments,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\nimport { t } from 'i18next';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (status && (status['@type'] === 'chatMemberStatusBanned' || status['@type'] === 'chatMemberStatusLeft')) {\n        return 'group is inaccessible';\n    }\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    return t('Members', count) + (onlineCount > 1 ? `, ${onlineCount} ${t('Online')}` : '');\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\nimport { t } from 'i18next';\n\nfunction getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    return t('Members', count) + (onlineCount > 1 ? `, ${onlineCount} ${t('Online')}` : '');\n}\n\nexport { getSupergroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize, getBrowser } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport { WebpMachine } from 'webp-hero';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst webpMachine = new WebpMachine();\nlet webpDecodeQueue = [];\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return null;\n\n    let size = file.size;\n    if (!size) return null;\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n    if (!message) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n    if (!message) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n    if (!message) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n    if (!message) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n    if (!message) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n    if (!message) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n    if (!message) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location: location,\n            zoom: LOCATION_ZOOM,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            scale: LOCATION_SCALE,\n            chat_id: message.chat_id\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    if (!local.is_downloading_completed && !local.can_be_downloaded) return false;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const photoSize = getPhotoThumbnailSize(photo.sizes);\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    if (!local.is_downloading_completed && !local.can_be_downloaded) return false;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n    if (!message) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nfunction isWebpSupported() {\n    return !['IE', 'Safari'].includes(getBrowser());\n}\n\nfunction decodeWebpBlobToPngUrl(blob) {\n    function decodeNext() {\n        const { data, resolve, reject } = webpDecodeQueue[0];\n        webpMachine.decode(data).then(url => {\n            resolve(url);\n            webpDecodeQueue.shift();\n            if (webpDecodeQueue.length > 0) {\n                decodeNext();\n            }\n        });\n    }\n\n    return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.onload = event => {\n            const ab = event.target.result;\n            webpDecodeQueue.push({ data: new Uint8Array(ab), resolve, reject });\n            if (webpDecodeQueue.length === 1) {\n                decodeNext();\n            }\n        };\n        fileReader.readAsArrayBuffer(blob);\n    });\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadDraftContent,\n    loadUserContent,\n    loadChatContent,\n    loadChatsContent,\n    loadUsersContent,\n    loadStickerContent,\n    loadStickerThumbnailContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension,\n    isWebpSupported,\n    decodeWebpBlobToPngUrl\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass MessageStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.selectedItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateNewMessage':\n                this.set(update.message);\n                this.emit('updateNewMessage', update);\n                break;\n            case 'updateDeleteMessages':\n                this.emit('updateDeleteMessages', update);\n                break;\n            case 'updateMessageEdited': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        message.reply_markup = update.reply_markup;\n                        message.edit_date = update.edit_date;\n                    }\n                }\n                this.emit('updateMessageEdited', update);\n                break;\n            }\n            case 'updateMessageViews': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message && update.views > message.views) {\n                        message.views = update.views;\n                    }\n                }\n                this.emit('updateMessageViews', update);\n                break;\n            }\n            case 'updateMessageContent': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        update.old_content = message.content;\n                        message.content = update.new_content;\n                    }\n                }\n                this.emit('updateMessageContent', update);\n                break;\n            }\n            case 'updateMessageContentOpened': {\n                const { chat_id, message_id } = update;\n\n                const message = this.get(chat_id, message_id);\n                if (message) {\n                    const { content } = message;\n                    switch (content['@type']) {\n                        case 'messageVoiceNote': {\n                            message.content.is_listened = true;\n                            break;\n                        }\n                        case 'messageVideoNote': {\n                            message.content.is_viewed = true;\n                            break;\n                        }\n                    }\n                }\n\n                this.emit('updateMessageContentOpened', update);\n                break;\n            }\n            case 'updateMessageSendSucceeded': {\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n\n                this.set(update.message);\n                this.emit('updateMessageSendSucceeded', update);\n                break;\n            }\n            case 'updateMessageSendFailed': {\n                if (update.message.sending_state) {\n                    update.message.sending_state.error_code = update.error_code;\n                    update.message.sending_state.error_message = update.error_message;\n                }\n\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                        if (message.sending_state) {\n                            message.sending_state.error_code = update.error_code;\n                            message.sending_state.error_message = update.error_message;\n                        }\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n                this.emit('updateMessageSendFailed', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMessageHighlighted': {\n                this.emit('clientUpdateMessageHighlighted', update);\n                break;\n            }\n            case 'clientUpdateMessageSelected': {\n                if (update.selected) {\n                    this.selectedItems.set(`chatId=${update.chatId}_messageId=${update.messageId}`, {\n                        chatId: update.chatId,\n                        messageId: update.messageId\n                    });\n                } else {\n                    this.selectedItems.delete(`chatId=${update.chatId}_messageId=${update.messageId}`);\n                }\n\n                this.emit('clientUpdateMessageSelected', update);\n                break;\n            }\n            case 'clientUpdateClearSelection': {\n                this.selectedItems.clear();\n\n                this.emit('clientUpdateClearSelection', update);\n                break;\n            }\n            case 'clientUpdateChatId': {\n                if (this.selectedItems.size > 0) {\n                    this.selectedItems.clear();\n\n                    this.emit('clientUpdateClearSelection', { '@type': 'clientUpdateClearSelection' });\n                }\n\n                break;\n            }\n            case 'clientUpdateReply': {\n                this.emit('clientUpdateReply', update);\n                break;\n            }\n            case 'clientUpdateMessagesInView': {\n                this.emit('clientUpdateMessagesInView', update);\n                break;\n            }\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    load(chatId, messageId) {\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(message => {\n                this.set(message);\n                this.emit('getMessageResult', message);\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                this.set(deletedMessage);\n                this.emit('getMessageResult', deletedMessage);\n            });\n    }\n\n    get(chatId, messageId) {\n        let chat = this.items.get(chatId);\n        if (!chat) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        let message = chat.get(messageId);\n        if (!message) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        return message;\n    }\n\n    set(message) {\n        let chat = this.items.get(message.chat_id);\n        if (!chat) {\n            chat = new Map();\n            this.items.set(message.chat_id, chat);\n        }\n\n        chat.set(message.id, message);\n    }\n\n    setItems(messages) {\n        for (let i = 0; i < messages.length; i++) {\n            this.set(messages[i]);\n        }\n    }\n}\n\nconst store = new MessageStore();\nwindow.message = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from '../../Tile/UserTileControl';\nimport { formatPhoneNumber } from '../../../Utils/Common';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, openMedia } = this.props;\n        if (!contact) return null;\n\n        const { user_id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(user_id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id: user_id,\n            first_name: first_name,\n            last_name: last_name\n        };\n\n        const fullName = getUserFullName(user);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className='contact'>\n                <div className='contact-tile'>\n                    <UserTileControl userId={user_id} user={user} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {user_id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>{number}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Contact;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Photo from './Photo';\nimport Animation from './Animation';\nimport { accentStyles } from '../../Theme';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Game.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { classes, game } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text);\n\n        return (\n            <div className='game'>\n                <div className={classNames('game-border', classes.accentBackgroundLight)} />\n                <div className='game-wrapper'>\n                    {title && <div className={classNames('game-title', classes.accentColorMain)}>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withStyles(styles)(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location } = this.props;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { location } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <a href={source} target='_blank' rel='noopener noreferrer'>\n                <div className='location-wrapper'>\n                    <img className='location-image' draggable={false} alt={source} src={src} />\n                    <div className='location-icon'>\n                        <RoomIcon fontSize='large' color='primary' />\n                    </div>\n                </div>\n            </a>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nconst styles = {\n    progressRoot: {\n        position: 'absolute',\n        top: 8,\n        left: 8,\n        pointerEvents: 'none'\n    },\n    radioRoot: {\n        padding: 6\n    },\n    icon: {\n        color: 'transparent'\n    }\n};\n\nclass PollRadio extends React.Component {\n    render() {\n        const { classes, chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    classes={{ root: classes.radioRoot }}\n                    color='primary'\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? classes.icon : null }} />}\n                />\n                {beingChosen && <CircularProgress size={20} thickness={4.4} classes={{ root: classes.progressRoot }} />}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool.isRequired,\n    beingChosen: PropTypes.bool.isRequired,\n    hidden: PropTypes.bool\n};\n\nexport default withStyles(styles)(PollRadio);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className={classNames('poll-percentage', { 'poll-percentage-subtitle': !chosen })}>\n                {!closed && chosen ? (\n                    <a className='poll-percentage-action' onClick={onClick}>\n                        {animated + '%'}\n                    </a>\n                ) : (\n                    <>{animated + '%'}</>\n                )}\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport { borderStyle } from '../../Theme';\nimport './PollOption.css';\n\nconst styles = theme => ({\n    progressRoot: {\n        backgroundColor: 'transparent',\n        margin: '2px 0 0 38px',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0\n    },\n    progressBar: {\n        transition: 'transform .2s linear'\n    },\n    ...borderStyle(theme)\n});\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    handleCancel = event => {\n        const { onUnvote } = this.props;\n\n        event.stopPropagation();\n\n        onUnvote();\n    };\n\n    render() {\n        const { classes, option, onChange, canBeSelected, closed, maxVoterCount, t } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage\n                            value={vote_percentage}\n                            chosen={is_chosen}\n                            closed={closed}\n                            onClick={this.handleCancel}\n                        />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <div className={classNames('poll-option-bottom-border', { [classes.borderColor]: canBeSelected })} />\n                <LinearProgress\n                    classes={{ root: classes.progressRoot, bar: classes.progressBar }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    onUnvote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PollOption from './PollOption';\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport './Poll.css';\n\nclass Poll extends React.Component {\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        return count ? t('Vote', count) : t('NoVotes');\n    };\n\n    handleVote = index => {\n        const { chatId, messageId } = this.props;\n\n        setPollAnswer(chatId, messageId, [index]);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, poll } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { dialog } = this.state;\n\n        if (dialog) {\n            this.setState({ dialog: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleDialog = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            dialog: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseDialog = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ dialog: false });\n    };\n\n    handleContextMenu = event => {\n        const { poll } = this.props;\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        const { left, top, contextMenu, dialog } = this.state;\n        const { question, options, total_voter_count, is_closed } = poll;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\n        const canStopPoll = message && message.can_be_edited;\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n\n        return (\n            <div className='poll' onContextMenu={this.handleContextMenu}>\n                <div className='poll-question'>\n                    <span className='poll-question-title'>{question}</span>\n                    <span className='subtitle'>{is_closed ? t('FinalResults') : t('AnonymousPoll')}</span>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                            onUnvote={this.handleUnvote}\n                        />\n                    ))}\n                </div>\n                <div className='poll-total-count subtitle'>{this.getTotalVoterCountString(total_voter_count, t)}</div>\n                <Popover\n                    open={contextMenu && (canUnvote || canStopPoll)}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canUnvote && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canStopPoll && <MenuItem onClick={this.handleDialog}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia } = this.props;\n        if (!venue) return null;\n\n        const { title, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location chatId={chatId} messageId={messageId} location={location} openMedia={openMedia} />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{title}</div>\n                    </a>\n                    <div className='venue-subtitle'>{address}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2019, Denis Olshin\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CallIcon from '@material-ui/icons/Call';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport { getMessageCallType } from '../../../Utils/Message';\nimport { getDurationApproximateString } from '../../../Utils/Common';\nimport './Call.css';\n\nconst styles = theme => ({\n    callIcon: {\n        color: theme.palette.primary.main,\n        height: '36px'\n    }\n});\n\nclass Call extends React.Component {\n    render() {\n        const { call, openMedia, classes, t } = this.props;\n        if (!call) return null;\n\n        const callType = getMessageCallType(call, t);\n        const duration = getDurationApproximateString(call.content.duration, t);\n\n        return (\n            <div className='call'>\n                <div className={classes.callIcon}>\n                    <CallIcon fontSize='large' />\n                </div>\n                <div className='call-content'>\n                    <div className='call-title'>{callType}</div>\n                    <div className='call-duration'>{duration || t('CallCancelled')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCall.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    call: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Call);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport Audio from '../Components/Message/Media/Audio';\nimport Animation from '../Components/Message/Media/Animation';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport Call from '../Components/Message/Media/Call';\nimport { getChatTitle } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize, getSize, getDurationApproximateString } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getAuthor(message) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(user);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message);\n}\n\nfunction getTitle(message) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(user);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction getFormattedText(text, onLinkClick) {\n    if (text['@type'] !== 'formattedText') return null;\n    if (!text.text) return null;\n    if (!text.entities) return text.text;\n\n    onLinkClick = onLinkClick || stopPropagation;\n\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < text.entities.length; i++) {\n        let beforeEntityText = substring(text.text, index, text.entities[i].offset);\n        if (beforeEntityText) {\n            result.push(beforeEntityText);\n        }\n\n        let entityText = substring(\n            text.text,\n            text.entities[i].offset,\n            text.entities[i].offset + text.entities[i].length\n        );\n        switch (text.entities[i].type['@type']) {\n            case 'textEntityTypeUrl': {\n                let url = entityText.startsWith('http') ? entityText : 'http://' + entityText;\n                let decodedUrl;\n                try {\n                    decodedUrl = decodeURI(entityText);\n                } catch (error) {\n                    console.error('uri: ' + entityText + '\\n' + error);\n                    decodedUrl = entityText;\n                }\n\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={onLinkClick}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {decodedUrl}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                let url = text.entities[i].type.url.startsWith('http')\n                    ? text.entities[i].type.url\n                    : 'http://' + text.entities[i].type.url;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={onLinkClick}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeBold':\n                result.push(<strong key={text.entities[i].offset}>{entityText}</strong>);\n                break;\n            case 'textEntityTypeItalic':\n                result.push(<em key={text.entities[i].offset}>{entityText}</em>);\n                break;\n            case 'textEntityTypeCode':\n                result.push(<code key={text.entities[i].offset}>{entityText}</code>);\n                break;\n            case 'textEntityTypePre':\n                result.push(\n                    <pre key={text.entities[i].offset}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                break;\n            case 'textEntityTypeMention':\n                let username = entityText.length > 0 && entityText[0] === '@' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a key={text.entities[i].offset} onClick={onLinkClick} href={`tg://resolve?domain=${username}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeMentionName':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={onLinkClick}\n                        href={`tg://user?id=${text.entities[i].type.user_id}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeHashtag':\n                let hashtag = entityText.length > 0 && entityText[0] === '#' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={onLinkClick}\n                        href={`tg://search_hashtag?hashtag=${hashtag}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeEmailAddress':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`mailto:${entityText}`}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeBotCommand':\n                let command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a key={text.entities[i].offset} onClick={onLinkClick} href={`tg://bot_command?command=${command}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += beforeEntityText.length + entityText.length;\n    }\n\n    if (index < text.text.length) {\n        let afterEntityText = text.text.substring(index);\n        if (afterEntityText) {\n            result.push(afterEntityText);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message, onLinkClick) {\n    if (!message) return null;\n\n    let text = [];\n\n    const { content } = message;\n\n    if (\n        content &&\n        content['@type'] === 'messageText' &&\n        content.text &&\n        content.text['@type'] === 'formattedText' &&\n        content.text.text\n    ) {\n        text = getFormattedText(content.text, onLinkClick);\n    } else {\n        //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\n        if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\n            text.push('\\n');\n            let formattedText = getFormattedText(content.caption, onLinkClick);\n            if (formattedText) {\n                text = text.concat(formattedText);\n            }\n        }\n    }\n\n    return text;\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    let date = new Date(message.date * 1000);\n\n    return dateFormat(date, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    const date = new Date(message.date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction getMedia(message, openMedia) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return <Animation chatId={chat_id} messageId={id} animation={content.animation} openMedia={openMedia} />;\n        case 'messageAudio':\n            return <Audio chatId={chat_id} messageId={id} audio={content.audio} openMedia={openMedia} />;\n        case 'messageContact':\n            return <Contact chatId={chat_id} messageId={id} contact={content.contact} openMedia={openMedia} />;\n        case 'messageDocument':\n            return <Document chatId={chat_id} messageId={id} document={content.document} openMedia={openMedia} />;\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return <Location chatId={chat_id} messageId={id} location={content.location} openMedia={openMedia} />;\n        case 'messagePhoto':\n            return <Photo chatId={chat_id} messageId={id} photo={content.photo} openMedia={openMedia} />;\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} />;\n        case 'messageSticker':\n            return <Sticker chatId={chat_id} messageId={id} sticker={content.sticker} openMedia={openMedia} />;\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return <Venue chatId={chat_id} messageId={id} venue={content.venue} openMedia={openMedia} />;\n        case 'messageVideo':\n            return <Video chatId={chat_id} messageId={id} video={content.video} openMedia={openMedia} />;\n        case 'messageVideoNote':\n            return <VideoNote chatId={chat_id} messageId={id} videoNote={content.video_note} openMedia={openMedia} />;\n        case 'messageVoiceNote':\n            return <VoiceNote chatId={chat_id} messageId={id} voiceNote={content.voice_note} openMedia={openMedia} />;\n        case 'messageCall':\n            return <Call chatId={chat_id} messageId={id} call={message} openMedia={openMedia} />;\n        default:\n            return '[' + content['@type'] + ']';\n    }\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            const user = UserStore.get(sender_user_id);\n            return getUserFullName(user);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction isMessageCallCancelled(call) {\n    return ['callDiscardReasonMissed', 'callDiscardReasonDeclined'].includes(call.discard_reason['@type']);\n}\n\nfunction getMessageCallType(message, t) {\n    if (message.is_outgoing) {\n        if (isMessageCallCancelled(message.content)) {\n            return t('CallMessageOutgoingMissed');\n        } else {\n            return t('CallMessageOutgoing');\n        }\n    } else {\n        if (isMessageCallCancelled(message.content)) {\n            return t('CallMessageIncomingMissed');\n        } else {\n            return t('CallMessageIncoming');\n        }\n    }\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            const callType = getMessageCallType(message, t);\n            const duration = getDurationApproximateString(content.duration, t);\n            return duration ? t('CallMessageWithDuration', callType, duration) : callType;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(location) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${LOCATION_WIDTH},${LOCATION_HEIGHT}&scale=${LOCATION_SCALE}&zoom=${LOCATION_ZOOM}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    // download file at loadMediaViewerContent instead\n    // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.userId);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        ApplicationStore.setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction parseHtmlAttrs(attrs) {\n    let map = { style: {} };\n    let match;\n    const attrRegex = new RegExp(\n        '[\\\\s\\\\r\\\\t\\\\n]*([a-z0-9\\\\-_]+)[\\\\s\\\\r\\\\t\\\\n]*=[\\\\s\\\\r\\\\t\\\\n]*([\\'\"])((?:\\\\\\\\\\\\2|(?!\\\\2).)*)\\\\2',\n        'ig'\n    );\n    while ((match = attrRegex.exec(attrs))) {\n        if (match[1].toLowerCase() === 'style') {\n            for (let prop of match[3].toLowerCase().split(';')) {\n                let pv = prop.split(':');\n                if (pv.length === 2) {\n                    map.style[pv[0].trim()] = pv[1].trim();\n                }\n            }\n        } else {\n            map[match[1].toLowerCase()] = match[3];\n        }\n    }\n    return map;\n}\n\nfunction cleanupHtml(html) {\n    let cleanHtml;\n    html = html\n        .replace(/<meta((?:\\s+[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>/gi, '')\n        .replace(/<![^>]*>/gi, '')\n        .replace(/\\n/gi, '');\n    for (let tag of ['style', 'head', 'script', 'svg']) {\n        html = html.replace(\n            new RegExp(\n                `<${tag}((?:\\\\s+[\\\\w-]+(?:\\\\s*=\\\\s*(?:\"[^\"]*\"|'[^']*'|[^'\">\\\\s]+))?)+\\\\s*|\\\\s*)>.*?</${tag}>`,\n                'igs'\n            ),\n            ''\n        );\n    }\n\n    while (true) {\n        cleanHtml = html.replace(\n            /<([\\w-]+)((?:\\s+[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\">\\s]+))?)+\\s*|\\s*)>([^<]*)<\\/[\\w-]+>/g,\n            (outer, tag, attrs, inner) => {\n                let { style, href } = parseHtmlAttrs(attrs);\n                tag = tag.toLowerCase();\n                let isBlock,\n                    bullet = '';\n                if (style['display']) {\n                    isBlock = ['grid', 'flex', 'block'].includes(style['display']);\n                } else {\n                    isBlock = 'address article aside blockquote dd div dl dt fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr li main nav noscript ol p pre section table tfoot ul video'\n                        .split(' ')\n                        .includes(tag);\n                }\n\n                if (style['display']) {\n                    bullet = style['display'] === 'list-item' ? '• ' : '';\n                } else {\n                    bullet = tag === 'li' ? '• ' : '';\n                }\n\n                if (['h1', 'h2', 'h3', 'h4', 'h5'].includes(tag)) {\n                    return `\\x00strong\\x01${inner}\\x00/strong\\x01\\x00br/\\x01\\x00br/\\x01`;\n                }\n                if (\n                    ['b', 'strong'].includes(tag) ||\n                    style['font-weight'] >= 500 ||\n                    ['bold', 'bolder'].includes(style['font-weight'])\n                ) {\n                    return `${bullet}\\x00strong\\x01${inner}\\x00/strong\\x01${isBlock ? '\\x00br/\\x01' : ''}`;\n                }\n                if (['i', 'em', 'var', 'cite', 'blockquote'].includes(tag) || style['font-style'] == 'italic') {\n                    return `${bullet}\\x00em\\x01${inner}\\x00/em\\x01${isBlock ? '\\x00br/\\x01' : ''}`;\n                }\n                if (\n                    ['code', 'kbd', 'samp', 'xmp', 'tt'].includes(tag) ||\n                    (!isBlock && style['font-family'] && style['font-family'].indexOf('monospace') > -1)\n                ) {\n                    return `${bullet}\\x00code\\x01${inner}\\x00/code\\x01${isBlock ? '\\x00br/\\x01' : ''}`;\n                }\n                if (\n                    ['pre'].includes(tag) ||\n                    (isBlock && style['font-family'] && style['font-family'].indexOf('monospace') > -1)\n                ) {\n                    return `${bullet}\\x00pre\\x01${inner}\\x00/pre\\x01\\x00br/\\x01`;\n                }\n                if (tag === 'a' && href) {\n                    return `${bullet}\\x00a href=\"${href}\"\\x01${inner}\\x00/a\\x01${isBlock ? '\\x00br/\\x01' : ''}`;\n                }\n                return `${bullet}${inner}${isBlock ? '\\x00br/\\x01' : ''}${tag === 'p' ? '\\x00br/\\x01' : ''}`;\n            }\n        );\n        if (cleanHtml === html) {\n            break;\n        }\n        html = cleanHtml;\n    }\n    html = cleanHtml;\n    while (true) {\n        cleanHtml = html.replace(\n            /<\\/?([\\w-]+)((?:\\s+[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>/g,\n            (outer, tag) => {\n                tag = tag.toLowerCase();\n                if (['br'].includes(tag)) {\n                    return '<br/>';\n                }\n                return '';\n            }\n        );\n        if (cleanHtml === html) {\n            break;\n        }\n        html = cleanHtml;\n    }\n    html = cleanHtml.replace(/\\x00/g, '<').replace(/\\x01/g, '>');\n    html = html\n        .replace(/(<br\\/>\\s*){3,}/gis, '<br/><br/>')\n        .replace(/(<br\\/>\\s*)*$/gis, '')\n        .replace(/^(<br\\/>\\s*)*/gis, '')\n        .trim();\n    return html;\n}\n\nfunction htmlToFormattedText(html) {\n    const entitiesMap = {\n        a: 'textEntityTypeTextUrl',\n        b: 'textEntityTypeBold',\n        strong: 'textEntityTypeBold',\n        i: 'textEntityTypeItalic',\n        em: 'textEntityTypeItalic',\n        code: 'textEntityTypeCode',\n        pre: 'textEntityTypePre'\n    };\n\n    const ta = document.createElement('textarea');\n\n    const tagRegex = /<(\\/?)(\\w+)((?:\\s+\\w+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\">\\s]+))?)+\\s*|\\s*)(\\/?)>/g;\n    let match,\n        text = '',\n        entities = [];\n    let index = 0,\n        depth = 0;\n    while ((match = tagRegex.exec(html))) {\n        let tag = match[2].toLowerCase();\n        ta.innerHTML = html.substring(index, tagRegex.lastIndex - match[0].length);\n        text += ta.value;\n        index = tagRegex.lastIndex;\n        if (tag === 'br') {\n            text += '\\n';\n            continue;\n        }\n        if (match[1] === '/') {\n            if (tag === 'p' || tag === 'div') {\n                text += '\\n' + (tag === 'p' ? '\\n' : '');\n            }\n            depth--;\n            if (depth === 0) {\n                entities[entities.length - 1].length = text.length - entities[entities.length - 1].offset;\n            }\n            continue;\n        }\n        if (match[4] === '/') {\n            continue;\n        }\n\n        depth++;\n        if (depth === 1 && ['a', 'b', 'strong', 'i', 'em', 'pre', 'code'].includes(tag)) {\n            entities.push({\n                '@type': 'textEntity',\n                offset: text.length,\n                length: 0,\n                type: {\n                    '@type': entitiesMap[tag]\n                }\n            });\n\n            if (tag === 'a') {\n                let { href } = parseHtmlAttrs(match[3]);\n                entities[entities.length - 1].type.url = href;\n            }\n        }\n    }\n\n    if (index < html.length - 1) {\n        ta.innerHTML = html.substring(index);\n        text += ta.value;\n    }\n\n    if (depth > 0) {\n        entities[entities.length - 1].length = text.length - entities[entities.length - 1].offset;\n    }\n\n    //console.log(text, entities);\n\n    return {\n        '@type': 'formattedText',\n        text: text,\n        entities: entities.length ? entities : null\n    };\n}\n\nfunction getEmojiCount(text) {\n    const emojiRegExp =\n        '(?:[\\\\u2700-\\\\u27bf]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]|[\\\\u0023-\\\\u0039]\\\\ufe0f?\\\\u20e3|\\\\u3299|\\\\u3297|\\\\u303d|\\\\u3030|\\\\u24c2|\\\\ud83c[\\\\udd70-\\\\udd71]|\\\\ud83c[\\\\udd7e-\\\\udd7f]|\\\\ud83c\\\\udd8e|\\\\ud83c[\\\\udd91-\\\\udd9a]|\\\\ud83c[\\\\udde6-\\\\uddff]|[\\\\ud83c[\\\\ude01\\\\uddff]|\\\\ud83c[\\\\ude01-\\\\ude02]|\\\\ud83c\\\\ude1a|\\\\ud83c\\\\ude2f|[\\\\ud83c[\\\\ude32\\\\ude02]|\\\\ud83c\\\\ude1a|\\\\ud83c\\\\ude2f|\\\\ud83c[\\\\ude32-\\\\ude3a]|[\\\\ud83c[\\\\ude50\\\\ude3a]|\\\\ud83c[\\\\ude50-\\\\ude51]|\\\\u203c|\\\\u2049|[\\\\u25aa-\\\\u25ab]|\\\\u25b6|\\\\u25c0|[\\\\u25fb-\\\\u25fe]|\\\\u00a9|\\\\u00ae|\\\\u2122|\\\\u2139|\\\\ud83c\\\\udc04|[\\\\u2600-\\\\u26FF]|\\\\u2b05|\\\\u2b06|\\\\u2b07|\\\\u2b1b|\\\\u2b1c|\\\\u2b50|\\\\u2b55|\\\\u231a|\\\\u231b|\\\\u2328|\\\\u23cf|[\\\\u23e9-\\\\u23f3]|[\\\\u23f8-\\\\u23fa]|\\\\ud83c\\\\udccf|\\\\u2934|\\\\u2935|[\\\\u2190-\\\\u21ff])';\n    if (text.length > 12 || !text.length) {\n        return null;\n    }\n    for (let i = 1; i <= 3; i++) {\n        if (text.match(new RegExp(`^${emojiRegExp}{${i}}$`))) {\n            return i;\n        }\n    }\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    getMedia,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    cleanupHtml,\n    htmlToFormattedText,\n    getMessageCallType,\n    isMessageCallCancelled,\n    getEmojiCount\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport Cookies from 'universal-cookie';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const cookies = new Cookies();\n        let playbackRate = cookies.get('playbackRate');\n        let volume = cookies.get('volume');\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.playlist = null;\n                this.message = null;\n                this.time = null;\n                this.videoStream = null;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) return;\n\n                this.message = message;\n\n                this.emit(update['@type'], update);\n\n                this.getPlaylist(chatId, messageId);\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                const cookies = new Cookies();\n                cookies.set('volume', volume);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                const cookies = new Cookies();\n                cookies.set('playbackRate', playbackRate);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openUser(userId, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenUser',\n        userId,\n        popup\n    });\n}\n\nexport function openChat(chatId, messageId = null, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenChat',\n        chatId,\n        messageId,\n        popup\n    });\n}\n\nexport function highlightMessage(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageHighlighted',\n        chatId,\n        messageId\n    });\n}\n\nexport function selectMessage(chatId, messageId, selected) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageSelected',\n        chatId,\n        messageId,\n        selected\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from 'dateformat';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\nimport { t } from 'i18next';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return t('ServiceNotifications').toLocaleLowerCase();\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return t('Bot');\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return t('ALongTimeAgo');\n        }\n        case 'userStatusLastMonth': {\n            return t('WithinAMonth');\n        }\n        case 'userStatusLastWeek': {\n            return t('WithinAWeek');\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return t('Offline');\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return t('LastSeenFormatted', t('Now'));\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return t('LastSeenFormatted', t('Now'));\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return t('LastSeenFormatted', t('Ago', t('Minutes', minutes)));\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return t('LastSeenFormatted', t('Ago', t('Hours', hours)));\n                }\n\n                // other\n                return t('LastSeenFormatted', t('TodayAtFormatted', dateFormat(wasOnline, 'H:MM')));\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return t('LastSeenFormatted', t('YesterdayAtFormatted', dateFormat(wasOnline, 'H:MM')));\n            }\n\n            return t('LastSeenDateFormatted', dateFormat(wasOnline, 'dd.mm.yyyy'));\n        }\n        case 'userStatusOnline': {\n            return t('Online');\n        }\n        case 'userStatusRecently': {\n            return t('Lately');\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(user) {\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name && user.last_name) return `${user.first_name} ${user.last_name}`;\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(user) {\n    if (!user) return null;\n\n    let title = getUserFullName(user);\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { id, sizes } = userProfilePhoto;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const smallPhotoSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const bigPhotoSize = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id: id,\n        small: smallPhotoSize.photo,\n        big: bigPhotoSize.photo\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateSupergroup':\n                this.set(update.supergroup);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateSupergroupFullInfo':\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(id) {\n        return this.items.get(id);\n    }\n\n    set(supergroup) {\n        this.items.set(supergroup.id, supergroup);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\n\nfunction isBlurredThumbnail(thumbnail) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < THUMBNAIL_BLURRED_SIZE;\n}\n\nfunction getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nfunction getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nfunction getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nexport { getAudioTitle, getNeighborStickersFromSets, getStickers, isBlurredThumbnail };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nconst circleStyle = { circle: 'file-progress-circle' };\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    handleCancel = event => {\n        const { onCancel } = this.props;\n        onCancel && onCancel();\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `FileProgress.render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className='file-progress' style={style}>\n                        <div className='file-progress-icon'>{completeIcon}</div>\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-indicator'>\n                        <CircularProgress\n                            classes={circleStyle}\n                            variant='static'\n                            value={progress}\n                            size={42}\n                            thickness={2}\n                        />\n                    </div>\n                    {cancelButton && (\n                        <div className='file-progress-icon' onClick={this.handleCancel}>\n                            <CloseIcon />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-icon'>{icon}</div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.object,\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Sticker.css';\n\nclass Sticker extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.removeListener('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, blur, sticker: source, style, openMedia, preview } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (!fitSize) return null;\n\n        const stickerStyle = {\n            width: fitSize.width,\n            height: fitSize.height,\n            ...style\n        };\n\n        return (\n            <div className={classNames('sticker', className)} style={stickerStyle} onClick={openMedia}>\n                {src && !preview ? (\n                    <img className='sticker-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo':\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getUserLetters } from '../../Utils/User';\nimport { loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTileControl.css';\n\nclass UserTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId === update.userId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    //console.log('UserTileControl.onClientUpdateChatBlob user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    if (!update.photo) {\n                        //console.log('UserTileControl.onUpdateChatPhoto user_id=' + userId);\n                        this.forceUpdate();\n                    } else {\n                        const store = FileStore.getStore();\n                        loadChatContent(store, chat);\n                    }\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId && !chat.photo) {\n                    //console.log('UserTileControl.onUpdateChatTitle user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, onSelect } = this.props;\n        let { user } = this.props;\n        if (!userId && !user) return null;\n\n        user = UserStore.get(userId) || user;\n        if (!user) return null;\n\n        const { profile_photo } = user;\n\n        const letters = getUserLetters(user);\n        const blob = profile_photo && profile_photo.small ? FileStore.getBlob(profile_photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return src ? (\n            <img className={className} src={src} draggable={false} alt='' onClick={this.handleSelect} />\n        ) : (\n            <div className={className} onClick={this.handleSelect}>\n                <span className='tile-text'>{letters}</span>\n            </div>\n        );\n    }\n}\n\nUserTileControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    user: PropTypes.object,\n    onSelect: PropTypes.func\n};\n\nexport default UserTileControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.stickerSet = null;\n        this.hint = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n        const photoSize = getSize(photo.sizes, size);\n        const thumbnail = getSize(photo.sizes, thumbnailSize);\n\n        this.state = {\n            photoSize: photoSize,\n            thumbnail: thumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize } = this.state;\n        const { fileId } = update;\n\n        if (!photoSize) return;\n\n        if (photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, showProgress, style } = this.props;\n        const { thumbnail, photoSize } = this.state;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        return (\n            <div className='photo' style={photoStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='photo-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('photo-image', { 'media-blurred': isBlurred })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(user);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport MessageStore from '../Stores/MessageStore';\nimport { t } from 'i18next';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        return t('Seconds', ttl);\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60);\n        return t('Minutes', minutes);\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60);\n        return t('Hours', hours);\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24);\n        return t('Days', days);\n    }\n    if (ttl >= 7 * 24 * 60 * 60) {\n        const weeks = Math.floor(ttl / 60 / 60 / 24 / 7);\n        return t('Weeks', weeks);\n    }\n\n    return t('Seconds', ttl);\n}\n\nfunction tFormatted(str) {\n    const regexp = new RegExp('un([1-9])', 'g');\n    const result = [];\n    let match;\n    let index = 0;\n    while ((match = regexp.exec(str))) {\n        const last = regexp.lastIndex - match[0].length;\n        if (last > index) {\n            result.push(str.substring(index, last));\n        }\n\n        const item = parseInt(match[1]);\n        if (item < arguments.length) {\n            result.push(arguments[item]);\n        }\n        index = regexp.lastIndex;\n    }\n    if (index < str.length - 1) {\n        result.push(str.substring(index));\n    }\n    return result;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return t('ActionBotDocumentAddress');\n        }\n        case 'passportElementTypeBankStatement': {\n            return t('ActionBotDocumentBankStatement');\n        }\n        case 'passportElementTypeDriverLicense': {\n            return t('ActionBotDocumentDriverLicence');\n        }\n        case 'passportElementTypeEmailAddress': {\n            return t('ActionBotDocumentEmail');\n        }\n        case 'passportElementTypeIdentityCard': {\n            return t('ActionBotDocumentIdentityCard');\n        }\n        case 'passportElementTypeInternalPassport': {\n            return t('ActionBotDocumentInternalPassport');\n        }\n        case 'passportElementTypePassport': {\n            return t('ActionBotDocumentPassport');\n        }\n        case 'passportElementTypePassportRegistration': {\n            return t('ActionBotDocumentPassportRegistration');\n        }\n        case 'passportElementTypePersonalDetails': {\n            return t('ActionBotDocumentPersonalDetails');\n        }\n        case 'passportElementTypePhoneNumber': {\n            return t('ActionBotDocumentPhoneNumber');\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return t('ActionBotDocumentRentalAgreement');\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return t('ActionBotDocumentTemporaryRegistration');\n        }\n        case 'passportElementTypeUtilityBill': {\n            return t('ActionBotDocumentUtilityBill');\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return t('OutgoingSelfdestructingPhotoMobile');\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {t('IncomingSelfdestructingPhotoMobile')}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return t('OutgoingSelfdestructingVideoMobile');\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {t('IncomingSelfdestructingVideoMobile')}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return t('OutgoingSelfdestructingMessageMobile');\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {t('IncomingSelfdestructingMessageMobile')}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    t('EventLogYouGroupJoined')\n                ) : (\n                    <>{tFormatted(t('ActionYouAddUser'), null, members)}</>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    {tFormatted(\n                        t('ActionAddUserSelfMega'),\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    )}\n                </>\n            ) : (\n                <>\n                    {tFormatted(\n                        t('EventLogAdded'),\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />,\n                        members\n                    )}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return t('ActionChannelChangedPhoto');\n            }\n\n            if (isOutgoing) {\n                return t('EventLogEditedYouChannelPhoto');\n            }\n\n            return (\n                <>\n                    {tFormatted(\n                        t('EventLogEditedGroupPhoto'),\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    )}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return tFormatted(t('ActionChannelChangedTitle'), null, title);\n            }\n\n            if (isOutgoing) {\n                return tFormatted(t('ActionYouChangedTitle'), null, title);\n            }\n\n            return (\n                <>\n                    {tFormatted(\n                        t('ActionChangedTitle'),\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />,\n                        title\n                    )}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    t('ActionYouLeftUser')\n                ) : (\n                    <>\n                        {tFormatted(\n                            t('ActionYouKickUser'),\n                            <MessageAuthor userId={content.user_id} openUser={openUser} />\n                        )}\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>{tFormatted(t('EventLogLeft'), <MessageAuthor userId={sender_user_id} openUser={openUser} />)}</>\n            ) : (\n                <>\n                    {tFormatted(\n                        t('EventLogRemoved'),\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />,\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    )}\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return t('ActionChannelRemovedPhoto');\n            }\n\n            if (isOutgoing) {\n                return t('EventLogRemovedYouGroupPhoto');\n            }\n\n            return (\n                <>\n                    {tFormatted(t('ActionRemovedPhoto'), <MessageAuthor userId={sender_user_id} openUser={openUser} />)}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return t('ActionInviteYou');\n            }\n\n            return (\n                <>{tFormatted(t('ActionInviteUser'), <MessageAuthor userId={sender_user_id} openUser={openUser} />)}</>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return t('MessageLifetimeYouRemoved');\n                }\n\n                return (\n                    <>\n                        {tFormatted(\n                            t('MessageLifetimeRemoved'),\n                            <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        )}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return t('MessageLifetimeChangedOutgoing', ttlString);\n            }\n\n            return (\n                <>\n                    {tFormatted(\n                        t('MessageLifetimeChanged'),\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />,\n                        ttlString\n                    )}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return t('ActionMigrateFromGroup');\n        }\n        case 'messageChatUpgradeTo': {\n            return t('ActionMigrateToGroup');\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    {tFormatted(\n                        t('ActionJoinedTelegram'),\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    )}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return t('ActionYouScoredInGame', content.score, game.title);\n                }\n\n                return (\n                    <>\n                        {t(\n                            'ActionUserScored',\n                            <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />,\n                            content.score,\n                            game.title\n                        )}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return t('ActionYouScored', content.score);\n            }\n\n            return (\n                <>\n                    {t(\n                        'ActionUserScored',\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />,\n                        content.score\n                    )}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    {tFormatted(\n                        t('ActionBotDocuments'),\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />,\n                        passportElementTypes\n                    )}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return <>{tFormatted(t('ActionPinnedNoText'), author)}</>;\n            }\n\n            let pinnedContent;\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = tFormatted(t('ActionPinnedNoText'), author);\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = tFormatted(t('ActionPinnedGif'), author);\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = tFormatted(t('ActionPinnedMusic'), author);\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = tFormatted(t('ActionPinnedNoText'), author);\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = tFormatted(t('ActionPinnedContact'), author);\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = tFormatted(t('ActionPinnedFile'), author);\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = tFormatted(t('ActionPinnedPhoto'), author);\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = tFormatted(t('ActionPinnedVideo'), author);\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = tFormatted(t('ActionPinnedNoText'), author);\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = tFormatted(t('ActionPinnedNoText'), author);\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = tFormatted(t('ActionPinnedGeo'), author);\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = tFormatted(t('ActionPinnedPhoto'), author);\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = tFormatted(t('ActionPinnedPoll'), author);\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = tFormatted(t('ActionPinnedSticker'), author);\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = tFormatted(t('ActionPinnedText', text), author);\n                        } else {\n                            pinnedContent = tFormatted(\n                                t('ActionPinnedText', text.substring(0, maxLength) + '…'),\n                                author\n                            );\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = tFormatted(t('ActionPinnedNoText'), author);\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = tFormatted(t('ActionPinnedGeo'), author);\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = tFormatted(t('ActionPinnedVideo'), author);\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = tFormatted(t('ActionPinnedRound'), author);\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = tFormatted(t('ActionPinnedVoice'), author);\n                        break;\n                    }\n                }\n            }\n\n            return <>{pinnedContent}</>;\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return t('ActionTakeScreenshootYou');\n            }\n\n            return (\n                <>\n                    {tFormatted(\n                        t('ActionTakeScreenshoot'),\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    )}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return t('ActionCreateChannel');\n            }\n\n            if (isOutgoing) {\n                return t('ActionYouCreateGroup');\n            }\n\n            return (\n                <>{tFormatted(t('ActionCreateGroup'), <MessageAuthor userId={sender_user_id} openUser={openUser} />)}</>\n            );\n        }\n        case 'messageUnsupported': {\n            return t('UnsupportedMedia');\n        }\n        case 'messageWebsiteConnected': {\n            return t('ActionBotAllowed', content.domain_name);\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.primary.main,\n        borderRadius: '50%',\n        width: 48,\n        height: 48\n    }\n});\n\nclass DocumentTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { classes, thumbnail, file, icon, completeIcon, openMedia, onCancel } = this.props;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const className = classNames('tile-photo', { 'document-tile-background': !thumbnailSrc });\n\n        return (\n            <div className='document-tile' onClick={openMedia}>\n                {thumbnailSrc ? (\n                    <img className={className} src={thumbnailSrc} draggable={false} alt='' />\n                ) : (\n                    <div className={classes.background} />\n                )}\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={thumbnailSrc}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={completeIcon}\n                        onCancel={onCancel}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t } = this.props;\n        const { thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = isBlurredThumbnail(thumbnail);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div className='animation' style={style} onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='media-viewer-content-image' style={style} src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-image'\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}>\n                            <source src={src} type='video/mp4' />\n                        </video>\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                            style={style}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker, inContainer } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview' style={{ position: inContainer ? 'absolute' : 'fixed' }}>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { file, prevFile } = this.state;\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './Document.css';\n\nclass Document extends React.Component {\n    handleCancel = () => {\n        const { document, chatId, messageId } = this.props;\n        if (!document) return null;\n\n        const file = document.document;\n        if (!file) return null;\n\n        if (file.local && file.local.is_downloading_active) {\n        } else if (file.remote && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, {\n                chat_id: chatId,\n                id: messageId\n            });\n        }\n    };\n\n    render() {\n        const { document, openMedia } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, file_name } = document;\n        const file = document.document;\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={<InsertDriveFileIcon />}\n                    onCancel={this.handleCancel}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\nimport InsertDriveFileIcon from './Document';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={title}>\n                            {title}\n                        </a>\n                    </div>\n                    <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    audio: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                timeString: this.getTimeString(update.currentTime, update.duration || duration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const file = thumbnail ? thumbnail.photo : null;\n        let blob = file ? FileStore.getBlob(file.id) || file.blob : null;\n        const src = FileStore.getBlobUrl(blob);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        return (\n            <div className='video' style={style} onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', { 'media-blurred': isBlurred })}\n                    style={style}\n                    src={src}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.children[0].src !== src) {\n            player.children[0].src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}>\n                            <source type='video/mp4' />\n                        </video>\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                                style={style}\n                                src={thumbnailSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<ArrowDownwardIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        onClick && onClick(event);\n        openChat(chatId, messageId);\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport {\n    MUTED_VALUE_MAX,\n    NOTIFICATIONS_DEBOUNCE_DELAY_MS,\n    MUTED_VALUE_MIN\n} from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(this.setChatNotificationSettings, NOTIFICATIONS_DEBOUNCE_DELAY_MS);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (\n                    chat.type['@type'] === 'chatTypeBasicGroup' ||\n                    chat.type['@type'] === 'chatTypeSupergroup'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (\n                    chat.type['@type'] === 'chatTypePrivate' ||\n                    chat.type['@type'] === 'chatTypeSecret'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.notification_settings) return;\n\n        const isMutedPrev = isChatMuted(chat);\n        if (isMutedPrev === isMuted) {\n            return;\n        }\n\n        const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n        const newNotificationSettings = {\n            ...chat.notification_settings,\n            use_default_mute_for: false,\n            mute_for: muteFor\n        };\n\n        TdLibController.send({\n            '@type': 'setChatNotificationSettings',\n            chat_id: chatId,\n            notification_settings: newNotificationSettings\n        });\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.poll = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {};\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.action.active\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Dialog/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { cleanupHtml, htmlToFormattedText } from '../../Utils/Message';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: htmlToFormattedText(newDraft),\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        if (!text) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: htmlToFormattedText(text),\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerHTML;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        let html = event.clipboardData.getData('text/html');\n        if (html) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, cleanupHtml(html));\n            this.innerHTML = html;\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            this.innerHTML = plainText;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local /* && file.local.is_downloading_completed*/ && !file.blob) {\n                    FileStore.setBlob(file.id, blob);\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        const { hint } = StickerStore;\n        if (hint) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: null\n            });\n        }\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton className={classes.iconButton} aria-label='Send' onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1 ? t('SendFiles') : t('SendFile')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('OK')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\nimport { withTranslation } from 'react-i18next';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChannelUnmute') : t('ChannelMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommandControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command={t('ChannelJoin')} onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command={t('ChannelJoin')} onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command={t('ChannelJoin')} onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Slider from '@material-ui/lab/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nconst styles = {\n    slider: {\n        maxWidth: 216\n    },\n    track: {\n        transition: 'width 0ms linear 0ms, height 0ms linear 0ms, transform 0ms linear 0ms'\n    },\n    thumbWrapper: {\n        transition: 'transform 0ms linear 0ms'\n    },\n    thumb: {\n        transition: 'transform 0ms linear 0ms, box-shadow 0ms linear 0ms'\n    }\n};\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                value: this.getValue(update.currentTime, update.duration || duration, active)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value: this.getValue(active ? currentTime : 0, duration, true)\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className={classes.slider}\n                    classes={{\n                        track: classes.track,\n                        thumbWrapper: classes.thumbWrapper,\n                        thumb: classes.thumb\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(VoiceNoteSlider);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport FileProgress from '../../Viewer/FileProgress';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, classes } = this.props;\n        const { playing } = this.state;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        //const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={null}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './ChatStatus.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderRadius: '50%',\n        overflow: 'hidden'\n    },\n    icon: {\n        background: 'transparent',\n        width: '100%',\n        height: '100%',\n        boxSizing: 'border-box'\n    },\n    iconIndicator: {\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        background: '#80d066'\n    }\n});\n\nclass ChatStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId: userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({\n            online: isUserOnline(user)\n        });\n    };\n\n    render() {\n        const { classes, size, borderSize, className } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className={classNames(className, classes.root)} style={{ width: size, height: size }}>\n                <div className={classes.icon} style={{ padding: borderSize }}>\n                    <div className={classes.iconIndicator} />\n                </div>\n            </div>\n        );\n    }\n}\n\nChatStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nChatStatus.defaultProps = {\n    size: 12,\n    borderSize: 2\n};\n\nexport default withStyles(styles)(ChatStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ChatStatus from './ChatStatus';\nimport { getChatLetters, getChatUserId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTileControl.css';\n\nconst styles = {\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {}\n};\n\nclass ChatTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    render() {\n        const { classes, chatId, showOnline, showSavedMessages, onSelect } = this.props;\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            const className = classNames('tile-photo', 'tile_color_4', { pointer: onSelect });\n            return (\n                <div className={className} onClick={this.handleSelect}>\n                    <div className='tile-saved-messages'>\n                        <BookmarkBorderIcon />\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat);\n        const blob = photo && photo.small ? FileStore.getBlob(photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return (\n            <div className='chat-tile' onClick={this.handleSelect}>\n                {src ? (\n                    <img className={className} src={src} draggable={false} alt='' />\n                ) : (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {showOnline && isPrivateChat(chatId) && (\n                    <ChatStatus classes={{ root: classes.statusRoot, icon: classes.statusIcon }} chatId={chatId} />\n                )}\n            </div>\n        );\n    }\n}\n\nChatTileControl.propTypes = {\n    classes: PropTypes.object,\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool\n};\n\nChatTileControl.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withStyles(styles, { withTheme: true })(ChatTileControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { getChatTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitleControl.css';\n\nclass DialogTitleControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return <div className='dialog-title'>{title}</div>;\n    }\n}\n\nDialogTitleControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitleControl.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitleControl);\n","import React from 'react';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogTitleControl from '../Tile/DialogTitleControl';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport { withTranslation } from 'react-i18next';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const { t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('MegaLeaveAlertWithName', chat.title);\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? t('ChannelLeaveAlertWithName', chat.title)\n                        : t('MegaLeaveAlertWithName', chat.title);\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('AreYouSureDeleteThisChatWithUser', getChatShortTitle(chatId));\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default withTranslation()(LeaveChatDialog);\n","import React from 'react';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogTitleControl from '../Tile/DialogTitleControl';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport { withTranslation } from 'react-i18next';\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {t('AreYouSureClearHistory')}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default withTranslation()(ClearHistoryDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat, isChatMuted } from '../../Utils/Chat';\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nimport LeaveChatDialog from '../Dialog/LeaveChatDialog';\nimport ClearHistoryDialog from '../Dialog/ClearHistoryDialog';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleMute = mute => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        this.handleMenuClose();\n\n        if (!chat) return;\n        if (!chat.notification_settings) return;\n\n        const isMutedPrev = isChatMuted(chat);\n        if (isMutedPrev === mute) {\n            return;\n        }\n\n        const muteFor = mute ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n        const newNotificationSettings = {\n            ...chat.notification_settings,\n            use_default_mute_for: false,\n            mute_for: muteFor\n        };\n\n        TdLibController.send({\n            '@type': 'setChatNotificationSettings',\n            chat_id: chatId,\n            notification_settings: newNotificationSettings\n        });\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        {t('Undo')}\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const { t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannelMenu') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('ChannelDeletedUndo') : t('GroupDeletedUndo');\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n        const chatMuted = isChatMuted(chat);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {!chatMuted && <MenuItem onClick={() => this.handleMute(true)}>{t('MuteNotifications')}</MenuItem>}\n                    {chatMuted && (\n                        <MenuItem onClick={() => this.handleMute(false)}>{t('UnmuteNotifications')}</MenuItem>\n                    )}\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from './UserTileControl';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n        if (!onSelect) return;\n\n        onSelect(user);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTileControl userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatusControl.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogStatusControl from './DialogStatusControl';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        onSelect(chat);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTileControl chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatusControl chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '../ColumnMiddle/MainMenuButton';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px',\n        alignItems: 'start'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon, members } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        if (nextState.members !== members) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        console.log('chatDetailsListRef', this.chatDetailsListRef);\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        console.log(\n            `[ChatDetails] componentDidUpdate before chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n        //list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        console.log(\n            `[ChatDetails] componentDidUpdate after chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.loadMembers();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n\n        const members = this.getMembers().map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    loadMembers = async () => {\n        const { chatId } = this.props;\n        this.setState({ members: null });\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup') {\n            const result = await TdLibController.send({\n                '@type': 'getSupergroupMembers',\n                supergroup_id: chat.type.supergroup_id,\n                limit: 200\n            });\n\n            const store = FileStore.getStore();\n            const members = result.members.map(x => x.user_id);\n            loadUsersContent(store, members);\n            this.setState({ members: result.members });\n        }\n    };\n\n    getMembers = () => {\n        const { chatId } = this.props;\n        return this.state.members || getGroupChatMembers(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleSelectUser = user => {\n        openUser(user.id, true);\n    };\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        ApplicationStore.setProfileMediaViewerContent({ chatId: chatId });\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = this.getMembers();\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleSelectUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {!isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    <Divider />\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chat => {\n        const { popup } = this.props;\n\n        openChat(chat.id);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTileControl chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: '0px'\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitleControl chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    listItemSelected: {\n        backgroundColor: theme.palette.primary.main + '!important'\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.listItemSelected]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}\n                    onClick={this.handleClick}>\n                    <ChatTileControl chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTileControl from './ChatTileControl';\nimport UserTileControl from './UserTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    accentBackground: {\n        background: theme.palette.primary.main + '!important'\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTileControl userId={sender_user_id} />\n            ) : (\n                <ChatTileControl chatId={chatId} />\n            );\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.accentBackground]: chatId === selectedChatId && messageId === selectedMessageId },\n                        { 'accent-background': chatId === selectedChatId && messageId === selectedMessageId }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitleControl chatId={chatId} />\n                            )}\n                            <div className={classNames('dialog-meta-date', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport FileStore from '../../../Stores/FileStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport UserStore from '../../../Stores/UserStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n                //global: null,\n                //messages: null\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            if (text.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: text\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    const globalLatinPromise = TdLibController.send({\n                        '@type': 'searchPublicChats',\n                        query: latinText\n                    });\n                    globalPromises.push(globalLatinPromise);\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global: global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterMessages(result, messages ? messages.messages : []);\n\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = t('NoMessagesFound');\n        if (messages && messages.total_count) {\n            messagesCaption = t('MessagesFound', messages.total_count);\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption={t('SearchIn')} />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label={t('Search')}\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption={t('SearchForPeople')} />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption\n                            caption={t('Recent')}\n                            command={t('SearchClear')}\n                            onClick={this.handleClearRecentlyFound}\n                        />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption={t('SearchFriends')} />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={t('GlobalSearch')} />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel\n                                value='light'\n                                control={<Radio color='primary' />}\n                                label={t('ThemeLight')}\n                            />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label={t('ThemeDark')} />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label={t('ColorRed')}\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label={t('ColorOrange')}\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label={t('ColorAmber')}\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label={t('ColorGreen')}\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label={t('ColorBlue')}\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label={t('ColorIndigo')}\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label={t('ColorDeepPurple')}\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateSearchHashtag', this.onClientUpdateSearchHashtag);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateSearchHashtag', this.onClientUpdateSearchHashtag);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onClientUpdateSearchHashtag = update => {\n        this.setState({ text: update.text });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open, text } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}>\n                                {text}\n                            </div>\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContentControl.css';\n\nclass DialogContentControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContentControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatUnreadMessageIcon,\n    isChatMuted,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogBadgeControl.css';\n\nconst styles = theme => ({\n    dialogBadge: {\n        background: theme.palette.primary.main\n    },\n    dialogBadgeMuted: {\n        background: theme.palette.type === 'dark' ? theme.palette.text.disabled : '#d8d8d8'\n    }\n});\n\nclass DialogBadgeControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { classes, chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const unreadMessageIcon = getChatUnreadMessageIcon(chat);\n        const unreadCount = getChatUnreadCount(chat);\n        const unreadMentionCount = getChatUnreadMentionCount(chat);\n        const showUnreadCount = unreadCount > 1 || (unreadCount === 1 && unreadMentionCount < 1);\n        const showDraftChat = showChatDraft(chat.id);\n\n        return (\n            <>\n                {unreadMessageIcon && !showDraftChat && <i className='dialog-badge-unread' />}\n                {unreadMentionCount && (\n                    <div className={classNames('dialog-badge', classes.dialogBadge)}>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount ? (\n                    <div\n                        className={classNames(\n                            { [classes.dialogBadgeMuted]: isChatMuted(chat) },\n                            'dialog-badge',\n                            classes.dialogBadge\n                        )}>\n                        <span className='dialog-badge-text'>{unreadCount}</span>\n                    </div>\n                ) : chat.is_pinned && !unreadMessageIcon ? (\n                    <i className='dialog-badge-pinned' />\n                ) : null}\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogBadgeControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DialogMetaControl.css';\n\nclass DialogMetaControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.removeListener('updateMessageMentionRead', this.onUpdate);\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        const date = getLastMessageDate(chat);\n\n        return <>{date && <div className='dialog-meta-date'>{date}</div>}</>;\n    }\n}\nexport default DialogMetaControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ChatTileControl from './ChatTileControl';\nimport DialogContentControl from './DialogContentControl';\nimport DialogBadgeControl from './DialogBadgeControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogMetaControl from './DialogMetaControl';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { openChat } from '../../Actions/Client';\nimport { canClearHistory, canDeleteChat, isPrivateChat, isChatMuted } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport './DialogControl.css';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\n\nimport LeaveChatDialog from '../Dialog/LeaveChatDialog';\nimport ClearHistoryDialog from '../Dialog/ClearHistoryDialog';\n\nconst styles = theme => ({\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    dialogActive: {\n        color: '#fff', //theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '& $statusRoot': {\n            background: theme.palette.primary.main\n        }\n    },\n    dialog: {\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main + '22',\n            '& $statusRoot': {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            },\n            '& $statusIcon': {\n                background: theme.palette.primary.main + '22'\n            }\n        }\n    }\n});\n\nclass DialogControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat: chat\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.hidden !== this.props.hidden) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== this.state.contextMenu) {\n            return true;\n        }\n\n        if (nextState.openClearHistory !== this.state.openClearHistory) {\n            return true;\n        }\n\n        if (nextState.openDelete !== this.state.openDelete) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            // LMB\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = mute => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        this.setState({ contextMenu: false });\n\n        if (!chat) return;\n        if (!chat.notification_settings) return;\n\n        const isMutedPrev = isChatMuted(chat);\n        if (isMutedPrev === mute) {\n            return;\n        }\n\n        const muteFor = mute ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n        const newNotificationSettings = {\n            ...chat.notification_settings,\n            use_default_mute_for: false,\n            mute_for: muteFor\n        };\n\n        TdLibController.send({\n            '@type': 'setChatNotificationSettings',\n            chat_id: chatId,\n            notification_settings: newNotificationSettings\n        });\n    };\n\n    getLeaveChatTitle = chatId => {\n        const { t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannelMenu') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    handleClearHistory = () => {\n        this.setState({ openClearHistory: true, contextMenu: false });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = this.props.chatId;\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.setState({ openDelete: true, contextMenu: false });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = this.props.chatId;\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        {t('Undo')}\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('ChannelDeletedUndo') : t('GroupDeletedUndo');\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    render() {\n        const { classes, chatId, t, showSavedMessages, hidden } = this.props;\n        const { left, top, contextMenu, openDelete, openClearHistory } = this.state;\n\n        if (hidden) return null;\n\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const chat = ChatStore.get(chatId);\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n        const chatMuted = isChatMuted(chat);\n\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(\n                    isSelected ? classes.dialogActive : classes.dialog,\n                    isSelected ? 'dialog-active' : 'dialog'\n                )}>\n                <div className='dialog-wrapper' onMouseDown={this.handleSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTileControl\n                        chatId={chatId}\n                        showSavedMessages={showSavedMessages}\n                        showOnline\n                        classes={{ statusRoot: classes.statusRoot, statusIcon: classes.statusIcon }}\n                    />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                            <DialogMetaControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContentControl chatId={chatId} />\n                            <DialogBadgeControl chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {!chatMuted && (\n                            <MenuItem onClick={() => this.handleMute(true)}>{t('MuteNotifications')}</MenuItem>\n                        )}\n                        {chatMuted && (\n                            <MenuItem onClick={() => this.handleMute(false)}>{t('UnmuteNotifications')}</MenuItem>\n                        )}\n                        {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                        {deleteChat && leaveChatTitle && (\n                            <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </div>\n        );\n    }\n}\n\nDialogControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogControl.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(DialogControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport DialogControl from '../Tile/DialogControl';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport { loadChatsContent } from '../../Utils/File';\nimport { itemsInView, orderCompare, throttle } from '../../Utils/Common';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            chats: [],\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chats !== this.state.chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        const { scrollTop } = snapshot;\n\n        list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.removeListener('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        if (update.inProgress) {\n            this.hiddenChats.set(update.chatId, update.chatId);\n        } else {\n            this.hiddenChats.delete(update.chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state } = update;\n\n        this.setState({ authorizationState: authorization_state }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    onUpdateConnectionState = update => {\n        const newConnectionState = update.state;\n        const { connectionState } = this.state;\n\n        this.setState({ connectionState: newConnectionState });\n\n        const updatingCompleted =\n            connectionState &&\n            connectionState['@type'] === 'connectionStateUpdating' &&\n            newConnectionState['@type'] !== 'connectionStateUpdating';\n        if (!updatingCompleted) return;\n\n        const hasSkippedUpdates = ChatStore.skippedUpdates.length > 0;\n        if (!hasSkippedUpdates) return;\n\n        ChatStore.skippedUpdates = [];\n        this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (authorizationState && authorizationState['@type'] === 'authorizationStateReady') {\n            await FileStore.initDB(() => this.onLoadNext());\n        }\n    };\n\n    onUpdateChatOrder = update => {\n        // NOTE: updateChatOrder is primary used to delete chats with order=0\n        // In all other cases use updateChatLastMessage\n\n        if (update.order !== '0') return;\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) {\n            return;\n        }\n\n        // unselect deleted chat\n        if (update.chat_id === ApplicationStore.getChatId()) {\n            TdLibController.setChatId(0);\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n\n        let chatIds = [];\n        for (let i = 0; i < this.state.chats.length; i++) {\n            let chat = ChatStore.get(this.state.chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds);\n    };\n\n    onUpdate = update => {\n        const { chat_id, order } = update;\n        if (order === '0') return;\n        const chat = ChatStore.get(chat_id);\n        if (!chat || chat.order === '0') {\n            return;\n        }\n\n        const { chats } = this.state;\n\n        let newChatIds = [];\n        if (chats.length > 0) {\n            const existingChat = chats.find(x => x === chat_id);\n            if (!existingChat) {\n                const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                if (orderCompare(minChatOrder, chat.order) === 1) {\n                    return;\n                }\n                newChatIds.push(chat.id);\n            }\n        }\n\n        // get last chat.order values\n        let chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list && list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            this.onLoadNext();\n        }\n    };\n\n    onLoadNext = async (replace = false) => {\n        const { chats } = this.state;\n\n        if (this.loading) return;\n\n        let offsetOrder = '9223372036854775807'; // 2^63\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        //TODO: replace result with one-way data flow\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        } else {\n            this.appendChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        }\n    };\n\n    loadChatContents(chats) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats);\n    }\n\n    appendChats(chats, callback) {\n        if (chats.length === 0) return;\n\n        this.setState({ chats: this.state.chats.concat(chats) }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats: chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current;\n        list.scrollTop = 0;\n    }\n\n    render() {\n        const { chats } = this.state;\n\n        const dialogs = chats.map(x => <DialogControl key={x} chatId={x} hidden={this.hiddenChats.has(x)} />);\n\n        /*<Scrollbars*/\n        /*ref={this.listRef}*/\n        /*onScroll={this.handleScroll}*/\n        /*autoHide*/\n        /*autoHideTimeout={500}*/\n        /*autoHideDuration={300}>*/\n        /*{chats}*/\n        /*</Scrollbars>*/\n\n        return (\n            <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n                {dialogs}\n            </div>\n        );\n    }\n}\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: update.text || null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        const { onSelectChat } = this.props;\n\n        openChat(chatId, messageId);\n\n        onSelectChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nDialogs.propTypes = {\n    onSelectChat: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, canPinMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    handlePin = event => {\n        if (MessageStore.selectedItems.size !== 1) return;\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        TdLibController.send({\n            '@type': 'pinChatMessage',\n            chat_id: chatId,\n            message_id: messageId\n        });\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n        const canBePinned = count === 1 && canPinMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    {canBePinned && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handlePin}>\n                            {t('PinMessage')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && (\n                        <>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                        </>\n                    )}\n                    <span\n                        className={classNames('header-status-title', {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const title = getMediaTitle(message);\n        const dateHint = getDateHint(message);\n        const date = getDate(message);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}>\n                    <source src={src} type='video/mp4' />\n                </video>\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHint}>\n                                        &nbsp;\n                                        {date}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2019, Denis Olshin\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { accentStyles } from '../Theme';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Button from '@material-ui/core/Button';\nimport './InlineKeyboard.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass InlineKeyboard extends React.Component {\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageEdited', this.onClientUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageEdited', this.onClientUpdateMessageEdited);\n    }\n\n    onClientUpdateMessageEdited = () => {\n        this.forceUpdate();\n    };\n\n    handleClick = async (event, cell) => {\n        const { chatId, messageId } = this.props;\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (cell.type['@type'] === 'inlineKeyboardButtonTypeCallback') {\n            const result = await TdLibController.send({\n                '@type': 'getCallbackQueryAnswer',\n                chat_id: chatId,\n                message_id: messageId,\n                payload: {\n                    '@type': 'callbackQueryPayloadData',\n                    data: cell.type.data\n                }\n            });\n        }\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let { reply_markup: markup } = message;\n\n        if (!markup || markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        return (\n            <div className='inline-keyboard'>\n                {markup.rows.map(row => (\n                    <div className='inline-keyboard-row'>\n                        {row.map(cell => (\n                            <Button\n                                onClick={event => this.handleClick(event, cell)}\n                                size='small'\n                                variant='outlined'\n                                fullWidth>\n                                {cell.text}\n                            </Button>\n                        ))}\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nInlineKeyboard.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InlineKeyboard);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes, t } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>{t('UnreadMessages')}</div>;\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport InlineKeyboard from './InlineKeyboard';\nimport UserTileControl from '../Tile/UserTileControl';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getDate,\n    getDateHint,\n    getText,\n    getMedia,\n    getUnread,\n    getSenderUserId,\n    getWebPage,\n    getEmojiCount,\n    openMedia\n} from '../../Utils/Message';\nimport { canSendMessages, canPinMessages, isPrivateChat, getChatShortTitle } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport UserStore from '../../Stores/UserStore';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { contextMenu, selected, highlighted, openDeleteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.openDeleteDialog !== openDeleteDialog) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messagePoll': {\n                this.forceUpdate();\n                break;\n            }\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleContextMenu = event => {\n        if ((window.getSelection() + '').length > 0) {\n            // Allow user to use the default context menu when he selected some text\n            return;\n        }\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId } = this.props;\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n        this.setState({ contextMenu: false });\n    };\n\n    handleForward = event => {\n        const { chatId, messageId } = this.props;\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [messageId]\n            }\n        });\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        let canBeDeletedForAllUsers = true;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message || !message.can_be_deleted_for_all_users) {\n            canBeDeletedForAllUsers = false;\n        }\n\n        this.setState({\n            contextMenu: false,\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: this.state.revoke\n        });\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleLinkClick = event => {\n        const { chatId, messageId } = this.props;\n\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const href = event.target.href;\n        let match;\n\n        if ((match = href.match(/^(?:https?:\\/\\/)?(?:t\\.me|telegram\\.me|telegram\\.dog)\\/joinchat\\/(.+)$/i))) {\n            // private link\n            TdLibController.send({\n                '@type': 'checkChatInviteLink',\n                invite_link: match[0]\n            }).then(result => {\n                if (result.chat_id) {\n                    openChat(result.chat_id, null);\n                } else {\n                    console.log(result); // TODO: show confirmation dialog here\n                    TdLibController.send({\n                        '@type': 'joinChatByInviteLink',\n                        invite_link: match[0]\n                    }).then(result => {\n                        openChat(result.id, null);\n                    });\n                }\n            });\n        } else if (\n            (match = href.match(/^(?:https?:\\/\\/)?(?:t\\.me|telegram\\.me|telegram\\.dog)\\/(.+)$/i)) ||\n            (match = href.match(/^tg:\\/\\/resolve\\?domain=(.+)$/i))\n        ) {\n            // public link\n            // mention by username\n            TdLibController.send({\n                '@type': 'searchPublicChat',\n                username: match[1]\n            }).then(result => {\n                if (result.id) {\n                    openUser(result.id, true);\n                } else {\n                    // TODO: handle not found\n                }\n            });\n        } else if ((match = href.match(/^tg:\\/\\/user\\?id=(.+)$/i))) {\n            // mention by user id\n            openUser(match[1], true);\n        } else if ((match = href.match(/^tg:\\/\\/search_hashtag\\?hashtag=(.+)$/i))) {\n            // hashtag\n            ApplicationStore.emit('clientUpdateSearchChat', { chatId, text: `#${match[1]}` });\n            ApplicationStore.emit('clientUpdateSearchHashtag', { text: `#${match[1]}` });\n        } else if ((match = href.match(/^tg:\\/\\/bot_command\\?command=(.+)$/i))) {\n            // bot command\n            TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: `/${match[1]}`,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            }).then(result => {\n                TdLibController.send({\n                    '@type': 'viewMessages',\n                    chat_id: chatId,\n                    message_ids: [result.id]\n                });\n            });\n        } else {\n            // unrecognized: pass to browser and hope for the best\n            return;\n        }\n\n        if (event) {\n            event.preventDefault();\n        }\n    };\n\n    handleBotClick = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { via_bot_user_id } = message;\n        const bot = UserStore.get(via_bot_user_id);\n\n        // TODO: Paste bot username\n        openUser(via_bot_user_id, true);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId } = this.props;\n\n        TdLibController.send({\n            '@type': 'pinChatMessage',\n            chat_id: chatId,\n            message_id: messageId\n        });\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, onReplyClick } = this.props;\n        const {\n            contextMenu,\n            left,\n            top,\n            selected,\n            highlighted,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke\n        } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const {\n            sending_state,\n            views,\n            edit_date,\n            reply_to_message_id,\n            forward_info,\n            content,\n            via_bot_user_id\n        } = message;\n\n        const text = getText(message, this.handleLinkClick);\n        const webPage = getWebPage(message);\n        const date = getDate(message);\n        const dateHint = getDateHint(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n        const senderUserId = getSenderUserId(message);\n\n        let emojiClass = '';\n        if (\n            content &&\n            content['@type'] === 'messageText' &&\n            content.text &&\n            content.text['@type'] === 'formattedText' &&\n            content.text.text &&\n            !content.text.entities.length\n        ) {\n            const emojiCount = getEmojiCount(content.text.text);\n            emojiClass = emojiCount ? ['emoji-large', 'emoji-medium', 'emoji-small'][emojiCount - 1] : '';\n        }\n\n        const bot = via_bot_user_id ? UserStore.get(via_bot_user_id) : null;\n\n        let canBeDeleted = true;\n        let canBeForwarded = true;\n        let canBeReplied = true;\n        let canBePinned = false;\n        if (contextMenu) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                canBeForwarded = false;\n            } else {\n                if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                    canBeDeleted = false;\n                }\n                if (!message.can_be_forwarded) {\n                    canBeForwarded = false;\n                }\n            }\n            canBeReplied = canSendMessages(chatId);\n            canBePinned = canPinMessages(chatId);\n        }\n\n        const tile = senderUserId ? (\n            <UserTileControl userId={senderUserId} onSelect={this.handleSelectUser} />\n        ) : (\n            <ChatTileControl chatId={chatId} onSelect={this.handleSelectChat} />\n        );\n\n        const messageClassName = classNames(\n            'message',\n            classes.message,\n            { 'message-selected': selected },\n            { [classes.messageSelected]: selected },\n            // { 'message-highlighted': highlighted && !selected },\n            { [classes.messageHighlighted]: highlighted && !selected }\n        );\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onContextMenu={this.handleContextMenu}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {!forward_info && (\n                                <div class='message-author'>\n                                    <MessageAuthor chatId={chatId} openChat userId={senderUserId} openUser />\n                                    {(via_bot_user_id && [\n                                        ' via ',\n                                        <a className='message-via-bot' onClick={this.handleBotClick}>\n                                            @{bot.username}\n                                        </a>\n                                    ]) ||\n                                        null}\n                                </div>\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            <div className='message-meta'>\n                                <span>&nbsp;</span>\n                                {views > 0 && (\n                                    <>\n                                        <i className='message-views-icon' />\n                                        <span className='message-views'>\n                                            &nbsp;\n                                            {views}\n                                            &nbsp; &nbsp;\n                                        </span>\n                                    </>\n                                )}\n                                {edit_date > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                                <a className='message-date' onClick={this.handleDateClick}>\n                                    <span title={dateHint}>{date}</span>\n                                </a>\n                            </div>\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={onReplyClick} />\n                        )}\n                        {media}\n                        <div className={['message-text', emojiClass].join(' ')}>{text}</div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                        <InlineKeyboard chatId={chatId} messageId={messageId} />\n                    </div>\n                </div>\n\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canBeReplied && <MenuItem onClick={this.handleReply}>{t('Reply')}</MenuItem>}\n                        {canBeForwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {canBePinned && <MenuItem onClick={this.handlePin}>{t('PinMessage')}</MenuItem>}\n                        {canBeDeleted && <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>Are you sure you want to delete 1 message?</DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('OK')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n\n            if (chat) {\n                console.log('PinnedMessage.getDerivedStateFromProps', chat, chat.pinned_message_id);\n            }\n\n            return {\n                prevPropsChatId: chatId,\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        this.setState({ messageId: 0 });\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        console.log('PinnedMessage.message', chatId, messageId, message);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div\n                className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                onClick={this.handleClick}>\n                <div className='pinned-message-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='pinned-message-content'>\n                        <div className={classNames('reply-content-title', classes.accentColorMain)}>\n                            {t('PinnedMessage')}\n                        </div>\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                    <div className='pinned-message-delete-button'>\n                        <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                            <CloseIcon />\n                        </IconButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className='service-message-content'>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2019, Denis Olshin\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport ChatStore from '../../Stores/ChatStore';\nimport { getChatUnreadCount } from '../../Utils/Chat';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    badge: {\n        background: theme.palette.primary.main\n    },\n    ...borderStyle(theme)\n});\n\nclass ScrollDownButton extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onUpdate);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onUpdate);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, chatId, onClick } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const unreadCount = getChatUnreadCount(chat);\n\n        return (\n            <div\n                className={classNames(classes.borderColor, classes.background, 'scroll-down-button')}\n                onClick={onClick}>\n                {(unreadCount && <div className={classNames(classes.badge, 'scroll-down-badge')}>{unreadCount}</div>) ||\n                    null}\n                <KeyboardArrowDownIcon className='scroll-down-icon' fontSize='large' />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport ScrollDownButton from './ScrollDownButton';\nimport {\n    debounce,\n    throttle,\n    getPhotoSize,\n    itemsInView,\n    addVisibilityHandler,\n    removeVisibilityHandler,\n    isDocumentVisible\n} from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { highlightMessage } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { openChat } from '../../Actions/Client';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    NONE: 'NONE',\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            replyChain: [],\n            clearHistory: false,\n            selectionActive: false,\n            scrollBehavior: ScrollBehaviorEnum.NONE,\n            separatorMessageId: 0\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.pendingViewMessages = [];\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        //debounce(this.updateItemsInView, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                replyChain: props.chatId === state.prevChatId && props.messageId ? state.replyChain : [],\n                clearHistory: false,\n                selectionActive: false,\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                separatorMessageId: 0\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.listRef.current;\n        const snapshot = {\n            scrollTop: list.scrollTop,\n            scrollHeight: list.scrollHeight,\n            offsetHeight: list.offsetHeight\n        };\n\n        console.log(\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            return true;\n        }\n\n        if (nextState.history !== history) {\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        this.handleSelectChat(chatId, 0);\n\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n\n        addVisibilityHandler(this.onChangeDocumentVisibility);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n\n        removeVisibilityHandler(this.onChangeDocumentVisibility);\n    }\n\n    onChangeDocumentVisibility = () => {\n        if (isDocumentVisible() && this.pendingViewMessages.length) {\n            MessagesList.viewMessages(this.pendingViewMessages);\n            this.pendingViewMessages = [];\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0,\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        this.replaceMessage(old_message_id, message, scrollBehavior);\n\n        let handleSendSucceeded = false;\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePoll': {\n                handleSendSucceeded = true;\n                break;\n            }\n        }\n\n        if (!handleSendSucceeded) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n\n        if (isDocumentVisible()) {\n            const list = this.listRef.current;\n            // at the end of list\n            if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n            // sent message\n            else if (message.is_outgoing) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n        }\n\n        const history = [message];\n\n        console.log('SCROLL MessagesList.onUpdateNewMessage scrollBehavior=' + scrollBehavior);\n        this.insertAfter(this.filterMessages(history), scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n\n        if (isDocumentVisible()) {\n            MessagesList.viewMessages(history);\n        } else {\n            this.pendingViewMessages.push(message);\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        if (!update.is_permanent) return;\n\n        this.deleteHistory(update.message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const message = this.messages[items[i]];\n            if (message) {\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        this.suppressHandleScrollOnSelectChat = true;\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            //TODO: replace result with one-way data flow\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            // calculate separator\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\n                this.suppressHandleScrollOnSelectChat = false;\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            MessagesList.viewMessages(result.messages);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.replace(\n                0,\n                [],\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                () => (this.suppressHandleScrollOnSelectChat = false)\n            );\n        }\n\n        if (previousChat) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChat.id\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    filterMessages = messages => {\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        let fromMessageId = 0;\n        if (\n            this.state.history &&\n            this.state.history.length > 0 &&\n            this.state.history[0].chat_id === basicGroupChat.id\n        ) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages));\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterMessages(result, this.state.history);\n\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\n        this.insertAfter(this.filterMessages(result.messages), ScrollBehaviorEnum.NONE);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, scrollBehavior, callback) {\n        this.setState(\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\n            callback\n        );\n    }\n\n    insertBefore(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\n            callback\n        );\n    }\n\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\n        if (!message) return;\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\n                scrollBehavior: scrollBehavior\n            },\n            callback\n        );\n    }\n\n    insertAfter(history, scrollBehavior, callback) {\n        if (history.length === 0) return;\n\n        this.setState({ history: this.state.history.concat(history), scrollBehavior: scrollBehavior }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) return;\n\n        let map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState(\n            { history: history.filter(x => !map.has(x.id)), scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM },\n            callback\n        );\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible } = this.state;\n        this.updateItemsInView();\n\n        const list = this.listRef.current;\n        //console.log(`SCROLL HANDLESCROLL list.scrollTop=${list.scrollTop} list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight} chatId=${this.props.chatId}`);\n\n        if (this.suppressHandleScroll) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScroll');\n            this.suppressHandleScroll = false;\n            return;\n        }\n\n        if (this.suppressHandleScrollOnSelectChat) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScrollOnSelectChat');\n            return;\n        }\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight && this.completed) {\n            if (scrollDownVisible) {\n                this.setState({ scrollDownVisible: false });\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        if (list.scrollTop <= 0) {\n            console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\n            this.onLoadPrevious();\n        } else {\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\n        }\n    };\n\n    handleScrollBehavior = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollBehavior, history } = this.state;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n\n        console.log(\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\n            scrollBehavior=${scrollBehavior} \\\\\n            previousScrollTop=${scrollTop} \\\\\n            previousScrollHeight=${scrollHeight} \\\\\n            previousOffsetHeight=${offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\n            this.scrollToBottom();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\n            this.scrollToMessage();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n\n            let scrolled = false;\n            for (let i = 0; i < history.length; i++) {\n                let itemComponent = this.itemsMap.get(i);\n                let item = ReactDOM.findDOMNode(itemComponent);\n                if (item) {\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                    if (itemComponent.props.showUnreadSeparator) {\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\n                        scrolled = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!scrolled) {\n                this.scrollToBottom();\n            }\n\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        }\n    };\n\n    handleScrollDown = () => {\n        if (this.state.replyChain.length) {\n            const { chatId } = this.props;\n            const messageId = this.state.replyChain.pop();\n            openChat(chatId, messageId);\n        } else {\n            this.scrollToStart();\n            this.setState({ scrollDownVisible: false });\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n    };\n\n    scrollToBottom = () => {\n        this.suppressHandleScroll = true;\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            chatId=${this.props.chatId}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        } else {\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        //TODO: replace result with one-way data flow\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        // calculate separator\n        let separatorMessageId = 0;\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        loadChatsContent(store, [chatId]);\n\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleReplyClick = messageId => {\n        this.setState({\n            replyChain: this.state.replyChain.concat([messageId])\n        });\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        console.log(`MessagesList.render clearHistory=${clearHistory}`, history);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) =>\n                  isServiceMessage(x) ? (\n                      <ServiceMessage\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  ) : (\n                      <Message\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showTitle\n                          sendingState={x.sending_state}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                          onReplyClick={() => this.handleReplyClick(x.id)}\n                      />\n                  )\n              );\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <PinnedMessage chatId={chatId} />\n                {(scrollDownVisible && <ScrollDownButton chatId={chatId} onClick={this.handleScrollDown} />) || null}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('Remove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Dialog/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Dialog/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTileControl from './UserTileControl';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(message);\n\n        const tileControl = userId ? (\n            <UserTileControl userId={userId} />\n        ) : (\n            <ChatTileControl chatId={chatId} />\n        );\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row message-meta'>\n                            <span className='message-date'>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        //console.log('mediaViewer file', file);\n        //console.log('mediaViewer thumbnail', thumbnail);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}>\n                        <source src={src} type='video/mp4' />\n                    </video>\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}>\n                        <source src={src} type='video/mp4' />\n                    </video>\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            ApplicationStore.setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        ApplicationStore.setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTileControl chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row message-meta'>\n                                <span className='message-date'>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        ApplicationStore.setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Dialog/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n\n        document.addEventListener('keydown', this.handleGlobalKeydown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleGlobalKeydown);\n\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.unread_count > 0) {\n                this.dialogDetailsRef.current.scrollToStart();\n            } else {\n                this.dialogDetailsRef.current.scrollToBottom();\n            }\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    handleGlobalKeydown = event => {\n        if (event.key === 'Escape') {\n            TdLibController.setChatId(0);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs onSelectChat={this.handleSelectChat} />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}